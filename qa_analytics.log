2025-05-13 09:09:11,832 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 09:09:11,834 - qa_analytics - INFO - Loaded config for QA-ID 1
2025-05-13 09:09:11,836 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 09:09:11,837 - qa_analytics - INFO - Loaded reference data config from configs/reference_data.yaml
2025-05-13 09:09:11,844 - qa_analytics - INFO - Loaded data source registry from configs/data_sources.yaml
2025-05-13 09:09:11,844 - qa_analytics - INFO - Found 4 data sources and 8 analytic mappings
2025-05-13 09:09:11,848 - qa_analytics - INFO - Loaded template 'approval_workflow' from approval_workflow_template.yaml
2025-05-13 09:09:11,851 - qa_analytics - INFO - Loaded template 'risk_assessment' from risk_assessment_template.yaml
2025-05-13 09:09:11,857 - qa_analytics - WARNING - Template metadata file not found: templates\metadata.yaml
2025-05-13 09:09:11,857 - qa_analytics - WARNING - Scheduler configuration not found at configs/scheduler.yaml, using defaults
2025-05-13 09:09:11,878 - qa_analytics - INFO - Loaded data source registry from configs/data_sources.yaml
2025-05-13 09:09:11,878 - qa_analytics - INFO - Found 4 data sources and 8 analytic mappings
2025-05-13 09:09:37,950 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 09:09:37,953 - qa_analytics - INFO - Loaded config for QA-ID 1
2025-05-13 09:09:37,954 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 09:09:37,955 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 09:09:37,956 - qa_analytics - INFO - Loaded reference data config from configs/reference_data.yaml
2025-05-13 09:09:37,963 - qa_analytics - INFO - Loaded data source registry from configs/data_sources.yaml
2025-05-13 09:09:37,963 - qa_analytics - INFO - Found 4 data sources and 8 analytic mappings
2025-05-13 09:09:37,967 - qa_analytics - INFO - Loaded template 'approval_workflow' from approval_workflow_template.yaml
2025-05-13 09:09:37,969 - qa_analytics - INFO - Loaded template 'risk_assessment' from risk_assessment_template.yaml
2025-05-13 09:09:37,975 - qa_analytics - WARNING - Template metadata file not found: templates\metadata.yaml
2025-05-13 09:09:37,975 - qa_analytics - INFO - Loaded scheduler configuration from configs/scheduler.yaml
2025-05-13 09:09:37,993 - qa_analytics - INFO - Loaded data source registry from configs/data_sources.yaml
2025-05-13 09:09:37,993 - qa_analytics - INFO - Found 4 data sources and 8 analytic mappings
2025-05-13 09:11:01,711 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 09:11:01,712 - qa_analytics - INFO - Loaded config for QA-ID 1
2025-05-13 09:11:01,714 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 09:11:01,715 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 09:11:01,716 - qa_analytics - INFO - Loaded reference data config from configs/reference_data.yaml
2025-05-13 09:11:01,723 - qa_analytics - INFO - Loaded data source registry from configs/data_sources.yaml
2025-05-13 09:11:01,723 - qa_analytics - INFO - Found 4 data sources and 8 analytic mappings
2025-05-13 09:11:01,726 - qa_analytics - INFO - Loaded template 'approval_workflow' from approval_workflow_template.yaml
2025-05-13 09:11:01,730 - qa_analytics - INFO - Loaded template 'risk_assessment' from risk_assessment_template.yaml
2025-05-13 09:11:01,735 - qa_analytics - WARNING - Template metadata file not found: templates\metadata.yaml
2025-05-13 09:11:01,735 - qa_analytics - INFO - Loaded scheduler configuration from configs/scheduler.yaml
2025-05-13 09:11:01,755 - qa_analytics - INFO - Loaded data source registry from configs/data_sources.yaml
2025-05-13 09:11:01,755 - qa_analytics - INFO - Found 4 data sources and 8 analytic mappings
2025-05-13 09:13:27,947 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 09:13:27,949 - qa_analytics - INFO - Loaded config for QA-ID 1
2025-05-13 09:13:27,950 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 09:13:27,951 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 09:13:27,952 - qa_analytics - INFO - Loaded reference data config from configs/reference_data.yaml
2025-05-13 09:13:27,959 - qa_analytics - INFO - Loaded data source registry from configs/data_sources.yaml
2025-05-13 09:13:27,960 - qa_analytics - INFO - Found 4 data sources and 8 analytic mappings
2025-05-13 09:13:27,963 - qa_analytics - INFO - Loaded template 'approval_workflow' from approval_workflow_template.yaml
2025-05-13 09:13:27,966 - qa_analytics - INFO - Loaded template 'risk_assessment' from risk_assessment_template.yaml
2025-05-13 09:13:27,971 - qa_analytics - INFO - Loaded template metadata
2025-05-13 09:13:27,971 - qa_analytics - INFO - Loaded scheduler configuration from configs/scheduler.yaml
2025-05-13 09:13:27,990 - qa_analytics - INFO - Loaded data source registry from configs/data_sources.yaml
2025-05-13 09:13:27,990 - qa_analytics - INFO - Found 4 data sources and 8 analytic mappings
2025-05-13 09:17:52,746 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 09:17:52,748 - qa_analytics - INFO - Loaded config for QA-ID 1
2025-05-13 09:17:52,749 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 09:17:52,750 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 09:17:52,751 - qa_analytics - INFO - Loaded reference data config from configs/reference_data.yaml
2025-05-13 09:17:52,759 - qa_analytics - INFO - Loaded data source registry from configs/data_sources.yaml
2025-05-13 09:17:52,759 - qa_analytics - INFO - Found 4 data sources and 8 analytic mappings
2025-05-13 09:17:52,762 - qa_analytics - INFO - Loaded template 'approval_workflow' from approval_workflow_template.yaml
2025-05-13 09:17:52,765 - qa_analytics - INFO - Loaded template 'risk_assessment' from risk_assessment_template.yaml
2025-05-13 09:17:52,770 - qa_analytics - INFO - Loaded template metadata
2025-05-13 09:17:52,771 - qa_analytics - INFO - Loaded scheduler configuration from configs/scheduler.yaml
2025-05-13 09:17:52,790 - qa_analytics - INFO - Loaded data source registry from configs/data_sources.yaml
2025-05-13 09:17:52,790 - qa_analytics - INFO - Found 4 data sources and 8 analytic mappings
2025-05-13 09:18:32,518 - qa_analytics - ERROR - Error applying template: 'list' object has no attribute 'startswith'
2025-05-13 09:18:42,265 - qa_analytics - ERROR - Error applying template: 'list' object has no attribute 'startswith'
2025-05-13 09:18:53,331 - qa_analytics - ERROR - Error applying template: 'list' object has no attribute 'startswith'
2025-05-13 09:18:59,422 - qa_analytics - ERROR - Error applying template: 'list' object has no attribute 'startswith'
2025-05-13 09:19:01,112 - qa_analytics - ERROR - Error applying template: 'list' object has no attribute 'startswith'
2025-05-13 09:20:18,837 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 09:20:18,839 - qa_analytics - INFO - Loaded config for QA-ID 1
2025-05-13 09:20:18,841 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 09:20:18,841 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 09:20:18,843 - qa_analytics - INFO - Loaded reference data config from configs/reference_data.yaml
2025-05-13 09:20:18,850 - qa_analytics - INFO - Loaded data source registry from configs/data_sources.yaml
2025-05-13 09:20:18,850 - qa_analytics - INFO - Found 4 data sources and 8 analytic mappings
2025-05-13 09:20:18,853 - qa_analytics - INFO - Loaded template 'approval_workflow' from approval_workflow_template.yaml
2025-05-13 09:20:18,856 - qa_analytics - INFO - Loaded template 'risk_assessment' from risk_assessment_template.yaml
2025-05-13 09:20:18,861 - qa_analytics - INFO - Loaded template metadata
2025-05-13 09:20:18,862 - qa_analytics - INFO - Loaded scheduler configuration from configs/scheduler.yaml
2025-05-13 09:20:18,881 - qa_analytics - INFO - Loaded data source registry from configs/data_sources.yaml
2025-05-13 09:20:18,881 - qa_analytics - INFO - Found 4 data sources and 8 analytic mappings
2025-05-13 10:59:22,849 - qa_analytics - INFO - Created directory: test_data
2025-05-13 10:59:22,850 - qa_analytics - INFO - Starting Enhanced QA Analytics in GUI mode
2025-05-13 10:59:22,907 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 10:59:22,910 - qa_analytics - INFO - Loaded config for QA-ID 1
2025-05-13 10:59:22,911 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 10:59:22,912 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 10:59:22,913 - qa_analytics - INFO - Loaded reference data config from configs/reference_data.yaml
2025-05-13 10:59:22,920 - qa_analytics - INFO - Loaded data source registry from configs/data_sources.yaml
2025-05-13 10:59:22,920 - qa_analytics - INFO - Found 4 data sources and 8 analytic mappings
2025-05-13 10:59:22,924 - qa_analytics - INFO - Loaded template 'approval_workflow' from approval_workflow_template.yaml
2025-05-13 10:59:22,927 - qa_analytics - INFO - Loaded template 'risk_assessment' from risk_assessment_template.yaml
2025-05-13 10:59:22,932 - qa_analytics - INFO - Loaded template metadata
2025-05-13 10:59:22,933 - qa_analytics - INFO - Loaded scheduler configuration from configs/scheduler.yaml
2025-05-13 10:59:22,952 - qa_analytics - INFO - Loaded data source registry from configs/data_sources.yaml
2025-05-13 10:59:22,952 - qa_analytics - INFO - Found 4 data sources and 8 analytic mappings
2025-05-13 11:00:03,268 - qa_analytics - ERROR - Error applying template: 'int' object has no attribute 'isdigit'
2025-05-13 11:00:25,706 - qa_analytics - ERROR - Error applying template: 'int' object has no attribute 'isdigit'
2025-05-13 11:04:49,912 - qa_analytics - INFO - Starting Enhanced QA Analytics in GUI mode
2025-05-13 11:04:49,957 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 11:04:49,959 - qa_analytics - INFO - Loaded config for QA-ID 1
2025-05-13 11:04:49,960 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 11:04:49,961 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 11:04:49,962 - qa_analytics - INFO - Loaded reference data config from configs/reference_data.yaml
2025-05-13 11:04:49,970 - qa_analytics - INFO - Loaded data source registry from configs/data_sources.yaml
2025-05-13 11:04:49,970 - qa_analytics - INFO - Found 4 data sources and 8 analytic mappings
2025-05-13 11:04:49,973 - qa_analytics - INFO - Loaded template 'approval_workflow' from approval_workflow_template.yaml
2025-05-13 11:04:49,976 - qa_analytics - INFO - Loaded template 'risk_assessment' from risk_assessment_template.yaml
2025-05-13 11:04:49,981 - qa_analytics - INFO - Loaded template metadata
2025-05-13 11:04:49,982 - qa_analytics - INFO - Loaded scheduler configuration from configs/scheduler.yaml
2025-05-13 11:04:50,001 - qa_analytics - INFO - Loaded data source registry from configs/data_sources.yaml
2025-05-13 11:04:50,001 - qa_analytics - INFO - Found 4 data sources and 8 analytic mappings
2025-05-13 11:05:23,608 - qa_analytics - INFO - Saved configuration to configs\qa_100.yaml
2025-05-13 11:05:24,643 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 11:05:24,645 - qa_analytics - INFO - Loaded config for QA-ID 1
2025-05-13 11:05:24,653 - qa_analytics - ERROR - Data source config missing required_fields
2025-05-13 11:05:24,654 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 11:05:24,655 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 11:05:45,092 - qa_analytics - INFO - Starting Enhanced QA Analytics in GUI mode
2025-05-13 11:05:45,136 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 11:05:45,139 - qa_analytics - INFO - Loaded config for QA-ID 1
2025-05-13 11:05:45,140 - qa_analytics - ERROR - Data source config missing required_fields
2025-05-13 11:05:45,141 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 11:05:45,142 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 11:05:45,143 - qa_analytics - INFO - Loaded reference data config from configs/reference_data.yaml
2025-05-13 11:05:45,150 - qa_analytics - INFO - Loaded data source registry from configs/data_sources.yaml
2025-05-13 11:05:45,150 - qa_analytics - INFO - Found 4 data sources and 8 analytic mappings
2025-05-13 11:05:45,154 - qa_analytics - INFO - Loaded template 'approval_workflow' from approval_workflow_template.yaml
2025-05-13 11:05:45,157 - qa_analytics - INFO - Loaded template 'risk_assessment' from risk_assessment_template.yaml
2025-05-13 11:05:45,162 - qa_analytics - INFO - Loaded template metadata
2025-05-13 11:05:45,163 - qa_analytics - INFO - Loaded scheduler configuration from configs/scheduler.yaml
2025-05-13 11:05:45,182 - qa_analytics - INFO - Loaded data source registry from configs/data_sources.yaml
2025-05-13 11:05:45,182 - qa_analytics - INFO - Found 4 data sources and 8 analytic mappings
2025-05-13 11:12:18,971 - qa_analytics - INFO - Starting Enhanced QA Analytics in GUI mode
2025-05-13 11:12:19,020 - qa_analytics - ERROR - Error loading config data_sources.yaml: mapping values are not allowed here
  in "configs\data_sources.yaml", line 243, column 18
2025-05-13 11:12:19,022 - qa_analytics - INFO - Loaded config for QA-ID 1
2025-05-13 11:12:19,023 - qa_analytics - INFO - Loaded config for QA-ID 100
2025-05-13 11:12:19,025 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 11:12:19,025 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 11:12:19,027 - qa_analytics - INFO - Loaded reference data config from configs/reference_data.yaml
2025-05-13 11:12:19,035 - qa_analytics - ERROR - Error loading data source registry: mapping values are not allowed here
  in "configs/data_sources.yaml", line 243, column 18
2025-05-13 11:12:19,038 - qa_analytics - INFO - Loaded template 'approval_workflow' from approval_workflow_template.yaml
2025-05-13 11:12:19,041 - qa_analytics - INFO - Loaded template 'risk_assessment' from risk_assessment_template.yaml
2025-05-13 11:12:19,047 - qa_analytics - INFO - Loaded template metadata
2025-05-13 11:12:19,047 - qa_analytics - INFO - Loaded scheduler configuration from configs/scheduler.yaml
2025-05-13 11:12:19,067 - qa_analytics - ERROR - Error loading data source registry: mapping values are not allowed here
  in "configs/data_sources.yaml", line 243, column 18
2025-05-13 11:13:04,892 - qa_analytics - INFO - Starting Enhanced QA Analytics in GUI mode
2025-05-13 11:13:04,940 - qa_analytics - ERROR - Error loading config data_sources.yaml: mapping values are not allowed here
  in "configs\data_sources.yaml", line 243, column 18
2025-05-13 11:13:04,942 - qa_analytics - INFO - Loaded config for QA-ID 1
2025-05-13 11:13:04,943 - qa_analytics - INFO - Loaded config for QA-ID 100
2025-05-13 11:13:04,944 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 11:13:04,945 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 11:13:04,946 - qa_analytics - INFO - Loaded reference data config from configs/reference_data.yaml
2025-05-13 11:13:04,954 - qa_analytics - ERROR - Error loading data source registry: mapping values are not allowed here
  in "configs/data_sources.yaml", line 243, column 18
2025-05-13 11:13:04,958 - qa_analytics - INFO - Loaded template 'approval_workflow' from approval_workflow_template.yaml
2025-05-13 11:13:04,961 - qa_analytics - INFO - Loaded template 'risk_assessment' from risk_assessment_template.yaml
2025-05-13 11:13:04,966 - qa_analytics - INFO - Loaded template metadata
2025-05-13 11:13:04,967 - qa_analytics - INFO - Loaded scheduler configuration from configs/scheduler.yaml
2025-05-13 11:13:04,986 - qa_analytics - ERROR - Error loading data source registry: mapping values are not allowed here
  in "configs/data_sources.yaml", line 243, column 18
2025-05-13 11:18:10,504 - qa_analytics - INFO - Starting Enhanced QA Analytics in GUI mode
2025-05-13 11:18:10,550 - qa_analytics - ERROR - Error loading config data_sources.yaml: mapping values are not allowed here
  in "configs\data_sources.yaml", line 243, column 18
2025-05-13 11:18:10,552 - qa_analytics - INFO - Loaded config for QA-ID 1
2025-05-13 11:18:10,553 - qa_analytics - INFO - Loaded config for QA-ID 100
2025-05-13 11:18:10,555 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 11:18:10,555 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 11:18:10,557 - qa_analytics - INFO - Loaded reference data config from configs/reference_data.yaml
2025-05-13 11:18:10,566 - qa_analytics - ERROR - Error loading data source registry: mapping values are not allowed here
  in "configs/data_sources.yaml", line 243, column 18
2025-05-13 11:18:10,569 - qa_analytics - INFO - Loaded template 'approval_workflow' from approval_workflow_template.yaml
2025-05-13 11:18:10,572 - qa_analytics - INFO - Loaded template 'risk_assessment' from risk_assessment_template.yaml
2025-05-13 11:18:10,577 - qa_analytics - INFO - Loaded template metadata
2025-05-13 11:18:10,578 - qa_analytics - INFO - Loaded scheduler configuration from configs/scheduler.yaml
2025-05-13 11:18:10,599 - qa_analytics - ERROR - Error loading data source registry: mapping values are not allowed here
  in "configs/data_sources.yaml", line 243, column 18
2025-05-13 11:19:53,356 - qa_analytics - INFO - Starting Enhanced QA Analytics in GUI mode
2025-05-13 11:19:53,403 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 11:19:53,405 - qa_analytics - INFO - Loaded config for QA-ID 1
2025-05-13 11:19:53,406 - qa_analytics - INFO - Loaded config for QA-ID 100
2025-05-13 11:19:53,408 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 11:19:53,408 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 11:19:53,410 - qa_analytics - INFO - Loaded reference data config from configs/reference_data.yaml
2025-05-13 11:19:53,418 - qa_analytics - INFO - Loaded data source registry from configs/data_sources.yaml
2025-05-13 11:19:53,419 - qa_analytics - INFO - Found 5 data sources and 9 analytic mappings
2025-05-13 11:19:53,422 - qa_analytics - INFO - Loaded template 'approval_workflow' from approval_workflow_template.yaml
2025-05-13 11:19:53,425 - qa_analytics - INFO - Loaded template 'risk_assessment' from risk_assessment_template.yaml
2025-05-13 11:19:53,431 - qa_analytics - INFO - Loaded template metadata
2025-05-13 11:19:53,431 - qa_analytics - INFO - Loaded scheduler configuration from configs/scheduler.yaml
2025-05-13 11:19:53,452 - qa_analytics - INFO - Loaded data source registry from configs/data_sources.yaml
2025-05-13 11:19:53,452 - qa_analytics - INFO - Found 5 data sources and 9 analytic mappings
2025-05-13 11:20:33,502 - qa_analytics - INFO - Saved configuration to configs\qa_101.yaml
2025-05-13 11:20:34,762 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 11:20:34,764 - qa_analytics - INFO - Loaded config for QA-ID 1
2025-05-13 11:20:34,766 - qa_analytics - INFO - Loaded config for QA-ID 100
2025-05-13 11:20:34,772 - qa_analytics - ERROR - Data source config missing required_fields
2025-05-13 11:20:34,773 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 11:20:34,774 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 11:23:12,374 - qa_analytics - INFO - Starting Enhanced QA Analytics in GUI mode
2025-05-13 11:23:12,421 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 11:23:12,423 - qa_analytics - INFO - Loaded config for QA-ID 1
2025-05-13 11:23:12,423 - qa_analytics - INFO - Loaded config for QA-ID 100
2025-05-13 11:23:12,425 - qa_analytics - ERROR - Data source config missing required_fields
2025-05-13 11:23:12,426 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 11:23:12,426 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 11:23:12,428 - qa_analytics - INFO - Loaded reference data config from configs/reference_data.yaml
2025-05-13 11:23:12,438 - qa_analytics - INFO - Loaded data source registry from configs/data_sources.yaml
2025-05-13 11:23:12,438 - qa_analytics - INFO - Found 5 data sources and 9 analytic mappings
2025-05-13 11:23:12,442 - qa_analytics - INFO - Loaded template 'approval_workflow' from approval_workflow_template.yaml
2025-05-13 11:23:12,445 - qa_analytics - INFO - Loaded template 'risk_assessment' from risk_assessment_template.yaml
2025-05-13 11:23:12,451 - qa_analytics - INFO - Loaded template metadata
2025-05-13 11:23:12,451 - qa_analytics - INFO - Loaded scheduler configuration from configs/scheduler.yaml
2025-05-13 11:23:12,472 - qa_analytics - INFO - Loaded data source registry from configs/data_sources.yaml
2025-05-13 11:23:12,472 - qa_analytics - INFO - Found 5 data sources and 9 analytic mappings
2025-05-13 11:23:42,116 - qa_analytics - INFO - Saved configuration to configs\qa_102.yaml
2025-05-13 11:23:43,425 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 11:23:43,427 - qa_analytics - INFO - Loaded config for QA-ID 1
2025-05-13 11:23:43,428 - qa_analytics - INFO - Loaded config for QA-ID 100
2025-05-13 11:23:43,429 - qa_analytics - ERROR - Data source config missing required_fields
2025-05-13 11:23:43,436 - qa_analytics - ERROR - Data source config missing required_fields
2025-05-13 11:23:43,437 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 11:23:43,438 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 11:30:17,884 - qa_analytics - INFO - Starting Enhanced QA Analytics in GUI mode
2025-05-13 11:30:17,932 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 11:30:17,934 - qa_analytics - INFO - Loaded config for QA-ID 1
2025-05-13 11:30:17,935 - qa_analytics - INFO - Loaded config for QA-ID 100
2025-05-13 11:30:17,937 - qa_analytics - ERROR - Data source config missing required_fields
2025-05-13 11:30:17,938 - qa_analytics - ERROR - Data source config missing required_fields
2025-05-13 11:30:17,939 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 11:30:17,939 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 11:30:17,941 - qa_analytics - INFO - Loaded reference data config from configs/reference_data.yaml
2025-05-13 11:30:17,951 - qa_analytics - INFO - Loaded data source registry from configs/data_sources.yaml
2025-05-13 11:30:17,951 - qa_analytics - INFO - Found 5 data sources and 9 analytic mappings
2025-05-13 11:30:17,954 - qa_analytics - INFO - Loaded template 'approval_workflow' from approval_workflow_template.yaml
2025-05-13 11:30:17,957 - qa_analytics - INFO - Loaded template 'risk_assessment' from risk_assessment_template.yaml
2025-05-13 11:30:17,963 - qa_analytics - INFO - Loaded template metadata
2025-05-13 11:30:17,963 - qa_analytics - INFO - Loaded scheduler configuration from configs/scheduler.yaml
2025-05-13 11:30:17,987 - qa_analytics - INFO - Loaded data source registry from configs/data_sources.yaml
2025-05-13 11:30:17,987 - qa_analytics - INFO - Found 5 data sources and 9 analytic mappings
2025-05-13 11:30:55,415 - qa_analytics - INFO - Successfully generated configuration for template risk_assessment
2025-05-13 11:30:57,190 - qa_analytics - INFO - Saved configuration to configs\qa_103.yaml
2025-05-13 11:30:58,539 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 11:30:58,541 - qa_analytics - INFO - Loaded config for QA-ID 1
2025-05-13 11:30:58,542 - qa_analytics - INFO - Loaded config for QA-ID 100
2025-05-13 11:30:58,544 - qa_analytics - ERROR - Data source config missing required_fields
2025-05-13 11:30:58,545 - qa_analytics - ERROR - Data source config missing required_fields
2025-05-13 11:30:58,551 - qa_analytics - INFO - Loaded config for QA-ID 103
2025-05-13 11:30:58,553 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-13 11:30:58,553 - qa_analytics - ERROR - Missing required config key: analytic_id
2025-05-14 12:37:55,772 - excel_formula_test - INFO - EXCEL FORMULA ENHANCEMENT DEMO
2025-05-14 12:37:55,772 - excel_formula_test - INFO - ============================
2025-05-14 12:37:55,772 - excel_formula_test - INFO - === EXCEL FORMULA PARSER TESTS ===
2025-05-14 12:37:55,772 - qa_analytics - INFO - Parsed formula: Submitter = Approver -> (df['Submitter']==df['Approver'])
2025-05-14 12:37:55,789 - excel_formula_test - INFO -   Expected: (df['Submitter'] == df['Approver'])
2025-05-14 12:37:55,789 - excel_formula_test - INFO -   Fields used: ['Submitter', 'Approver']
2025-05-14 12:37:55,789 - excel_formula_test - INFO - ---
2025-05-14 12:37:55,789 - qa_analytics - INFO - Parsed formula: Submitter <> Approver -> (df['Submitter']!=df['Approver'])
2025-05-14 12:37:55,790 - excel_formula_test - INFO -   Expected: (df['Submitter'] != df['Approver'])
2025-05-14 12:37:55,790 - excel_formula_test - INFO -   Fields used: ['Submitter', 'Approver']
2025-05-14 12:37:55,790 - excel_formula_test - INFO - ---
2025-05-14 12:37:55,791 - excel_formula_test - INFO - ---
2025-05-14 12:37:55,792 - excel_formula_test - INFO - ---
2025-05-14 12:37:55,793 - excel_formula_test - INFO - ---
2025-05-14 12:37:55,794 - excel_formula_test - INFO - ---
2025-05-14 12:37:55,796 - excel_formula_test - INFO - ---
2025-05-14 12:37:55,797 - excel_formula_test - INFO - ---
2025-05-14 12:37:55,797 - qa_analytics - INFO - Parsed formula: NOT Complete -> (~df['Complete'])
2025-05-14 12:37:55,797 - excel_formula_test - INFO -   Expected: (~(df['Complete']))
2025-05-14 12:37:55,797 - excel_formula_test - INFO -   Fields used: ['Complete']
2025-05-14 12:37:55,797 - excel_formula_test - INFO - ---
2025-05-14 12:37:55,798 - excel_formula_test - INFO - ---
2025-05-14 12:37:55,802 - excel_formula_test - INFO - ---
2025-05-14 12:37:55,803 - excel_formula_test - INFO - ---
2025-05-14 12:37:55,803 - qa_analytics - INFO - Parsed formula: ISBLANK(Approver) -> (pd.isnadf['Approver']))
2025-05-14 12:37:55,805 - excel_formula_test - INFO -   Expected: (pd.isna(df['Approver']))
2025-05-14 12:37:55,805 - excel_formula_test - INFO -   Fields used: ['Approver']
2025-05-14 12:37:55,805 - excel_formula_test - INFO - ---
2025-05-14 12:37:55,805 - qa_analytics - INFO - Parsed formula: NOT ISBLANK(Approver) -> (~pd.isnadf['Approver']))
2025-05-14 12:37:55,805 - excel_formula_test - INFO -   Expected: (~pd.isna(df['Approver']))
2025-05-14 12:37:55,805 - excel_formula_test - INFO -   Fields used: ['Approver']
2025-05-14 12:37:55,805 - excel_formula_test - INFO - ---
2025-05-14 12:37:55,806 - qa_analytics - INFO - Parsed formula: Risk Level IN ("High", "Medium") -> (df['Risk']df['Level'].isin("High","Medium"))
2025-05-14 12:37:55,806 - excel_formula_test - INFO -   Expected: (df['Risk Level'].isin(["High", "Medium"]))
2025-05-14 12:37:55,806 - excel_formula_test - INFO -   Fields used: ['Risk', 'Level']
2025-05-14 12:37:55,807 - excel_formula_test - INFO - ---
2025-05-14 12:37:55,807 - excel_formula_test - INFO - 
=== CUSTOM FORMULA VALIDATION TESTS ===
2025-05-14 12:37:55,812 - excel_formula_test - INFO - Test data created with 5 records
2025-05-14 12:37:55,812 - excel_formula_test - INFO - 
Testing formula: Submitter <> Approver
2025-05-14 12:37:55,812 - qa_analytics - INFO - Parsed formula: Submitter <> Approver -> (df['Submitter']!=df['Approver'])
2025-05-14 12:37:55,812 - excel_formula_test - INFO - Parsed: (df['Submitter']!=df['Approver'])
2025-05-14 12:37:55,812 - excel_formula_test - INFO - Fields: ['Submitter', 'Approver']
2025-05-14 12:37:55,813 - excel_formula_test - INFO - Results: 4 of 5 records pass (80.0%)
2025-05-14 12:37:55,815 - excel_formula_test - INFO - 
Passing Examples:
2025-05-14 12:37:55,818 - excel_formula_test - INFO -   Submitter Approver
0      John    Alice
1      Mary     John
2025-05-14 12:37:55,819 - excel_formula_test - INFO - 
Failing Examples:
2025-05-14 12:37:55,819 - excel_formula_test - INFO -   Submitter Approver
2      John     John
2025-05-14 12:37:55,819 - excel_formula_test - INFO - 
Testing formula: `Submit Date` <= `TL Date`
2025-05-14 12:37:55,819 - excel_formula_test - ERROR - Error testing formula: Unknown token in formula: <=
2025-05-14 12:37:55,819 - excel_formula_test - INFO - 
Testing formula: Value > 100
2025-05-14 12:37:55,820 - excel_formula_test - ERROR - Error testing formula: Unknown token in formula: >
2025-05-14 12:37:55,820 - excel_formula_test - INFO - 
Testing formula: Risk Level = "High"
2025-05-14 12:37:55,820 - qa_analytics - INFO - Parsed formula: Risk Level = "High" -> (df['Risk']df['Level']=="High")
2025-05-14 12:37:55,820 - excel_formula_test - INFO - Parsed: (df['Risk']df['Level']=="High")
2025-05-14 12:37:55,820 - excel_formula_test - INFO - Fields: ['Risk', 'Level']
2025-05-14 12:37:55,820 - qa_analytics - ERROR - Custom formula failed: invalid syntax. Perhaps you forgot a comma? (<string>, line 1), Formula: Risk Level = "High"
2025-05-14 12:37:55,820 - excel_formula_test - INFO - Results: 0 of 5 records pass (0.0%)
2025-05-14 12:37:55,821 - excel_formula_test - INFO - 
Failing Examples:
2025-05-14 12:37:55,821 - excel_formula_test - ERROR - Error testing formula: "None of [Index(['Risk', 'Level'], dtype='object')] are in the [columns]"
2025-05-14 12:37:55,821 - excel_formula_test - INFO - 
Testing formula: Submitter <> Approver AND `Submit Date` <= `TL Date`
2025-05-14 12:37:55,821 - excel_formula_test - ERROR - Error testing formula: Unknown token in formula: <=
2025-05-14 12:37:55,821 - excel_formula_test - INFO - 
=== CONFIGURATION EXAMPLE ===
2025-05-14 12:37:55,821 - excel_formula_test - INFO - Sample YAML configuration with Excel formula:
2025-05-14 12:37:55,821 - excel_formula_test - INFO - 
analytic_id: 99
analytic_name: 'Custom Formula Demo'
analytic_description: 'Demonstrates Excel-style formula validation'

# Data source configuration
data_source:
  name: 'approval_workflow'
  required_fields:
    - 'Submitter'
    - 'Approver'
    - 'Submit Date'
    - 'TL Date'
    - 'Risk Level'
    - 'Value'

# Validations with custom formula
validations:
  - rule: custom_formula
    description: 'Submitter cannot approve their own work and approval sequence must be followed'
    parameters:
      original_formula: 'Submitter <> Approver AND `Submit Date` <= `TL Date`'
      formula: "(df['Submitter'] != df['Approver']) & (df['Submit Date'] <= df['TL Date'])"
    metadata:
      fields_used: ['Submitter', 'Approver', 'Submit Date', 'TL Date']
  
  - rule: segregation_of_duties
    description: 'Traditional segregation of duties validation for comparison'
    parameters:
      submitter_field: 'Submitter'
      approver_fields: ['Approver']

thresholds:
  error_percentage: 5.0
  rationale: 'Industry standard allows for up to 5% error rate.'

reporting:
  group_by: 'Approver'
  summary_fields: ['GC', 'PC', 'DNC', 'Total', 'DNC_Percentage']
  detail_required: True

2025-05-14 12:37:55,821 - excel_formula_test - INFO - 
=== TEST UTILITY EXAMPLE ===
2025-05-14 12:37:55,822 - excel_formula_test - INFO - Testing formula: Submitter <> Approver AND `Submit Date` <= `TL Date`
2025-05-14 12:37:55,825 - excel_formula_test - INFO - Parsed formula: (df['Submitter'] != df['Approver']) & (df['Submit Date'] <= df['TL Date'])
2025-05-14 12:37:55,825 - excel_formula_test - INFO - Fields used: Submitter, Approver, Submit Date, TL Date
2025-05-14 12:37:55,825 - excel_formula_test - INFO - Total records: 5
2025-05-14 12:37:55,825 - excel_formula_test - INFO - Passing: 2 (40.0%)
2025-05-14 12:37:55,825 - excel_formula_test - INFO - Failing: 3
2025-05-14 12:37:55,825 - excel_formula_test - INFO - 
Passing Examples:
2025-05-14 12:37:55,826 - excel_formula_test - INFO -   1. {'Submitter': 'John', 'Approver': 'Alice', 'Submit Date': Timestamp('2025-01-01 00:00:00'), 'TL Date': Timestamp('2025-01-05 00:00:00'), 'Risk Level': 'High', 'Value': 100, 'Complete': True}
2025-05-14 12:37:55,826 - excel_formula_test - INFO -   2. {'Submitter': 'Bob', 'Approver': 'Charlie', 'Submit Date': Timestamp('2025-04-01 00:00:00'), 'TL Date': Timestamp('2025-05-01 00:00:00'), 'Risk Level': 'Critical', 'Value': 500, 'Complete': True}
2025-05-14 12:37:55,826 - excel_formula_test - INFO - 
Failing Examples:
2025-05-14 12:37:55,826 - excel_formula_test - INFO -   1. {'Submitter': 'Mary', 'Approver': 'John', 'Submit Date': Timestamp('2025-02-01 00:00:00'), 'TL Date': Timestamp('2025-01-15 00:00:00'), 'Risk Level': 'Medium', 'Value': 200, 'Complete': True}
2025-05-14 12:37:55,826 - excel_formula_test - INFO -   2. {'Submitter': 'John', 'Approver': 'John', 'Submit Date': Timestamp('2025-03-01 00:00:00'), 'TL Date': Timestamp('2025-02-01 00:00:00'), 'Risk Level': 'Low', 'Value': 50, 'Complete': False}
2025-05-14 12:37:55,826 - excel_formula_test - INFO - 
Demo complete. This shows how the Excel Formula Enhancement would work
2025-05-14 12:37:55,826 - excel_formula_test - INFO - in the QA Analytics Framework. The actual parser implementation would
2025-05-14 12:37:55,826 - excel_formula_test - INFO - replace the hardcoded examples used in this demonstration.
2025-05-14 12:48:30,433 - qa_analytics - INFO - Parsed formula: Submitter <> Approver AND `Submit Date` <= `TL Date` -> (df['Submitter']!=df['Approver']&df['Submit Date']<=df['TL Date'])
2025-05-14 12:48:30,434 - qa_analytics - ERROR - Custom formula failed: unsupported operand type(s) for &: 'str' and 'int', Formula: Submitter <> Approver AND `Submit Date` <= `TL Date`
2025-05-14 12:59:20,244 - excel_formula_test - INFO - EXCEL FORMULA ENHANCEMENT DEMO
2025-05-14 12:59:20,244 - excel_formula_test - INFO - ============================
2025-05-14 12:59:20,244 - excel_formula_test - INFO - === EXCEL FORMULA PARSER TESTS ===
2025-05-14 12:59:20,245 - qa_analytics - INFO - Parsed formula: Submitter = Approver -> (df['Submitter']==df['Approver'])
2025-05-14 12:59:20,247 - excel_formula_test - INFO -   Parsed: (df['Submitter']==df['Approver'])
2025-05-14 12:59:20,247 - excel_formula_test - INFO -   Fields: ['Submitter', 'Approver']
2025-05-14 12:59:20,247 - excel_formula_test - INFO - ---
2025-05-14 12:59:20,247 - qa_analytics - INFO - Parsed formula: Submitter <> Approver -> (df['Submitter']!=df['Approver'])
2025-05-14 12:59:20,248 - excel_formula_test - INFO -   Parsed: (df['Submitter']!=df['Approver'])
2025-05-14 12:59:20,248 - excel_formula_test - INFO -   Fields: ['Submitter', 'Approver']
2025-05-14 12:59:20,248 - excel_formula_test - INFO - ---
2025-05-14 12:59:20,248 - qa_analytics - INFO - Parsed formula: Value > 100 -> (df['Value']>100)
2025-05-14 12:59:20,249 - excel_formula_test - INFO -   Parsed: (df['Value']>100)
2025-05-14 12:59:20,249 - excel_formula_test - INFO -   Fields: ['Value']
2025-05-14 12:59:20,249 - excel_formula_test - INFO - ---
2025-05-14 12:59:20,249 - qa_analytics - INFO - Parsed formula: Value >= 100 -> (df['Value']>=100)
2025-05-14 12:59:20,249 - excel_formula_test - INFO -   Parsed: (df['Value']>=100)
2025-05-14 12:59:20,249 - excel_formula_test - INFO -   Fields: ['Value']
2025-05-14 12:59:20,249 - excel_formula_test - INFO - ---
2025-05-14 12:59:20,249 - qa_analytics - INFO - Parsed formula: Value < 200 -> (df['Value']<200)
2025-05-14 12:59:20,251 - excel_formula_test - INFO -   Parsed: (df['Value']<200)
2025-05-14 12:59:20,251 - excel_formula_test - INFO -   Fields: ['Value']
2025-05-14 12:59:20,251 - excel_formula_test - INFO - ---
2025-05-14 12:59:20,251 - qa_analytics - INFO - Parsed formula: Value <= 200 -> (df['Value']<=200)
2025-05-14 12:59:20,252 - excel_formula_test - INFO -   Parsed: (df['Value']<=200)
2025-05-14 12:59:20,252 - excel_formula_test - INFO -   Fields: ['Value']
2025-05-14 12:59:20,252 - excel_formula_test - INFO - ---
2025-05-14 12:59:20,252 - qa_analytics - INFO - Parsed formula: Submitter <> Approver AND Value > 100 -> (df['Submitter']!=df['Approver']) & (df['Value']>100)
2025-05-14 12:59:20,253 - excel_formula_test - INFO -   Parsed: (df['Submitter']!=df['Approver']) & (df['Value']>100)
2025-05-14 12:59:20,253 - excel_formula_test - INFO -   Fields: ['Submitter', 'Approver', 'Value']
2025-05-14 12:59:20,253 - excel_formula_test - INFO - ---
2025-05-14 12:59:20,253 - qa_analytics - INFO - Parsed formula: Submitter = Approver OR Value > 100 -> (df['Submitter']==df['Approver']) | (df['Value']>100)
2025-05-14 12:59:20,254 - excel_formula_test - INFO -   Parsed: (df['Submitter']==df['Approver']) | (df['Value']>100)
2025-05-14 12:59:20,254 - excel_formula_test - INFO -   Fields: ['Submitter', 'Approver', 'Value']
2025-05-14 12:59:20,254 - excel_formula_test - INFO - ---
2025-05-14 12:59:20,254 - qa_analytics - INFO - Parsed formula: NOT Complete -> (~df['Complete'])
2025-05-14 12:59:20,255 - excel_formula_test - INFO -   Parsed: (~df['Complete'])
2025-05-14 12:59:20,255 - excel_formula_test - INFO -   Fields: ['Complete']
2025-05-14 12:59:20,255 - excel_formula_test - INFO - ---
2025-05-14 12:59:20,255 - qa_analytics - INFO - Parsed formula: (Submitter <> Approver) AND (Value > 100) -> (df['Submitter']!=df['Approver'])&(df['Value']>100)
2025-05-14 12:59:20,255 - excel_formula_test - INFO -   Parsed: (df['Submitter']!=df['Approver'])&(df['Value']>100)
2025-05-14 12:59:20,256 - excel_formula_test - INFO -   Fields: ['Submitter', 'Approver', 'Value']
2025-05-14 12:59:20,256 - excel_formula_test - INFO - ---
2025-05-14 12:59:20,256 - qa_analytics - INFO - Parsed formula: Submit Date <= TL Date -> (df['Submit']df['Date']<=df['TL']df['Date'])
2025-05-14 12:59:20,256 - excel_formula_test - INFO -   Parsed: (df['Submit']df['Date']<=df['TL']df['Date'])
2025-05-14 12:59:20,256 - excel_formula_test - INFO -   Fields: ['TL Date', 'Submit Date', 'Submit', 'Date', 'TL']
2025-05-14 12:59:20,256 - excel_formula_test - INFO - ---
2025-05-14 12:59:20,257 - qa_analytics - INFO - Parsed formula: Submitter <> Approver AND Submit Date <= TL Date AND Value > 100 -> ((df['Submitter']!=df['Approver']) & (df['Submit']df['Date']<=df['TL']df['Date'])&df['Value']>100)
2025-05-14 12:59:20,257 - excel_formula_test - INFO -   Parsed: ((df['Submitter']!=df['Approver']) & (df['Submit']df['Date']<=df['TL']df['Date'])&df['Value']>100)
2025-05-14 12:59:20,257 - excel_formula_test - INFO -   Fields: ['TL Date', 'Submit Date', 'Submitter', 'Approver', 'Submit', 'Date', 'TL', 'Value']
2025-05-14 12:59:20,257 - excel_formula_test - INFO - ---
2025-05-14 12:59:20,257 - qa_analytics - INFO - Parsed formula: ISBLANK(Approver) -> (pd.isna)
2025-05-14 12:59:20,258 - excel_formula_test - INFO -   Parsed: (pd.isna)
2025-05-14 12:59:20,258 - excel_formula_test - INFO -   Fields: []
2025-05-14 12:59:20,258 - excel_formula_test - INFO - ---
2025-05-14 12:59:20,258 - qa_analytics - INFO - Parsed formula: NOT ISBLANK(Approver) -> (~pd.isna)
2025-05-14 12:59:20,259 - excel_formula_test - INFO -   Parsed: (~pd.isna)
2025-05-14 12:59:20,259 - excel_formula_test - INFO -   Fields: []
2025-05-14 12:59:20,259 - excel_formula_test - INFO - ---
2025-05-14 12:59:20,259 - qa_analytics - INFO - Parsed formula: Risk Level IN ("High", "Medium") -> (df['Risk']df['Level'].isin("High","Medium"))
2025-05-14 12:59:20,260 - excel_formula_test - INFO -   Parsed: (df['Risk']df['Level'].isin("High","Medium"))
2025-05-14 12:59:20,260 - excel_formula_test - INFO -   Fields: ['Risk', 'Level']
2025-05-14 12:59:20,260 - excel_formula_test - INFO - ---
2025-05-14 12:59:20,260 - excel_formula_test - INFO - 
=== FORMULA VALIDATION TESTS ===
2025-05-14 12:59:20,261 - excel_formula_test - INFO - Test data created with 5 records
2025-05-14 12:59:20,261 - excel_formula_test - INFO - 
Testing formula: Submitter <> Approver
2025-05-14 12:59:20,261 - qa_analytics - INFO - Parsed formula: Submitter <> Approver -> (df['Submitter']!=df['Approver'])
2025-05-14 12:59:20,262 - excel_formula_test - INFO - Parsed: (df['Submitter']!=df['Approver'])
2025-05-14 12:59:20,262 - excel_formula_test - INFO - Fields: ['Submitter', 'Approver']
2025-05-14 12:59:20,262 - excel_formula_test - INFO - Results: 4 of 5 records pass (80.0%)
2025-05-14 12:59:20,262 - excel_formula_test - INFO - Expected: 3 records, Got: 4
2025-05-14 12:59:20,262 - excel_formula_test - INFO - Passing Examples:
2025-05-14 12:59:20,265 - excel_formula_test - INFO -   Submitter Approver
0      John    Alice
1      Mary     John
2025-05-14 12:59:20,265 - excel_formula_test - INFO - Failing Examples:
2025-05-14 12:59:20,266 - excel_formula_test - INFO -   Submitter Approver
2      John     John
2025-05-14 12:59:20,266 - excel_formula_test - INFO - 
Testing formula: Value > 100
2025-05-14 12:59:20,266 - qa_analytics - INFO - Parsed formula: Value > 100 -> (df['Value']>100)
2025-05-14 12:59:20,266 - excel_formula_test - INFO - Parsed: (df['Value']>100)
2025-05-14 12:59:20,266 - excel_formula_test - INFO - Fields: ['Value']
2025-05-14 12:59:20,266 - excel_formula_test - INFO - Results: 2 of 5 records pass (40.0%)
2025-05-14 12:59:20,266 - excel_formula_test - INFO - Expected: 3 records, Got: 2
2025-05-14 12:59:20,266 - excel_formula_test - INFO - Passing Examples:
2025-05-14 12:59:20,267 - excel_formula_test - INFO -    Value
1    200
3    500
2025-05-14 12:59:20,267 - excel_formula_test - INFO - Failing Examples:
2025-05-14 12:59:20,268 - excel_formula_test - INFO -    Value
0    100
2     50
2025-05-14 12:59:20,268 - excel_formula_test - INFO - 
Testing formula: `Submit Date` <= `TL Date`
2025-05-14 12:59:20,268 - qa_analytics - INFO - Parsed formula: Submit Date <= TL Date -> (df['Submit']df['Date']<=df['TL']df['Date'])
2025-05-14 12:59:20,268 - excel_formula_test - INFO - Parsed: (df['Submit']df['Date']<=df['TL']df['Date'])
2025-05-14 12:59:20,268 - excel_formula_test - INFO - Fields: ['TL Date', 'Submit Date', 'Submit', 'Date', 'TL']
2025-05-14 12:59:20,268 - qa_analytics - ERROR - Custom formula failed: invalid syntax. Perhaps you forgot a comma? (<string>, line 1), Formula: `Submit Date` <= `TL Date`
2025-05-14 12:59:20,268 - excel_formula_test - INFO - Results: 0 of 5 records pass (0.0%)
2025-05-14 12:59:20,268 - excel_formula_test - INFO - Expected: 3 records, Got: 0
2025-05-14 12:59:20,268 - excel_formula_test - INFO - Failing Examples:
2025-05-14 12:59:20,269 - excel_formula_test - ERROR - Error testing formula: "['Submit', 'Date', 'TL'] not in index"
2025-05-14 12:59:20,269 - excel_formula_test - INFO - 
Testing formula: Submitter <> Approver AND Value > 100
2025-05-14 12:59:20,269 - qa_analytics - INFO - Parsed formula: Submitter <> Approver AND Value > 100 -> (df['Submitter']!=df['Approver']) & (df['Value']>100)
2025-05-14 12:59:20,269 - excel_formula_test - INFO - Parsed: (df['Submitter']!=df['Approver']) & (df['Value']>100)
2025-05-14 12:59:20,269 - excel_formula_test - INFO - Fields: ['Submitter', 'Approver', 'Value']
2025-05-14 12:59:20,269 - excel_formula_test - INFO - Results: 2 of 5 records pass (40.0%)
2025-05-14 12:59:20,269 - excel_formula_test - INFO - Expected: 2 records, Got: 2
2025-05-14 12:59:20,269 - excel_formula_test - INFO - Passing Examples:
2025-05-14 12:59:20,269 - excel_formula_test - INFO -   Submitter Approver  Value
1      Mary     John    200
3       Bob  Charlie    500
2025-05-14 12:59:20,271 - excel_formula_test - INFO - Failing Examples:
2025-05-14 12:59:20,272 - excel_formula_test - INFO -   Submitter Approver  Value
0      John    Alice    100
2      John     John     50
2025-05-14 12:59:20,272 - excel_formula_test - INFO - 
Testing formula: Risk Level = "High"
2025-05-14 12:59:20,272 - qa_analytics - INFO - Parsed formula: Risk Level = "High" -> (df['Risk']df['Level']=="High")
2025-05-14 12:59:20,272 - excel_formula_test - INFO - Parsed: (df['Risk']df['Level']=="High")
2025-05-14 12:59:20,272 - excel_formula_test - INFO - Fields: ['Risk', 'Level']
2025-05-14 12:59:20,272 - qa_analytics - ERROR - Custom formula failed: invalid syntax. Perhaps you forgot a comma? (<string>, line 1), Formula: Risk Level = "High"
2025-05-14 12:59:20,272 - excel_formula_test - INFO - Results: 0 of 5 records pass (0.0%)
2025-05-14 12:59:20,272 - excel_formula_test - INFO - Expected: 1 records, Got: 0
2025-05-14 12:59:20,272 - excel_formula_test - INFO - Failing Examples:
2025-05-14 12:59:20,273 - excel_formula_test - ERROR - Error testing formula: "None of [Index(['Risk', 'Level'], dtype='object')] are in the [columns]"
2025-05-14 12:59:20,273 - excel_formula_test - INFO - 
Testing formula: Risk Level IN ("High", "Medium")
2025-05-14 12:59:20,273 - qa_analytics - INFO - Parsed formula: Risk Level IN ("High", "Medium") -> (df['Risk']df['Level'].isin("High","Medium"))
2025-05-14 12:59:20,273 - excel_formula_test - INFO - Parsed: (df['Risk']df['Level'].isin("High","Medium"))
2025-05-14 12:59:20,273 - excel_formula_test - INFO - Fields: ['Risk', 'Level']
2025-05-14 12:59:20,273 - qa_analytics - ERROR - Custom formula failed: invalid syntax. Perhaps you forgot a comma? (<string>, line 1), Formula: Risk Level IN ("High", "Medium")
2025-05-14 12:59:20,273 - excel_formula_test - INFO - Results: 0 of 5 records pass (0.0%)
2025-05-14 12:59:20,273 - excel_formula_test - INFO - Expected: 2 records, Got: 0
2025-05-14 12:59:20,273 - excel_formula_test - INFO - Failing Examples:
2025-05-14 12:59:20,274 - excel_formula_test - ERROR - Error testing formula: "None of [Index(['Risk', 'Level'], dtype='object')] are in the [columns]"
2025-05-14 12:59:20,274 - excel_formula_test - INFO - 
Testing formula: NOT ISBLANK(Value)
2025-05-14 12:59:20,274 - qa_analytics - INFO - Parsed formula: NOT ISBLANK(Value) -> (~pd.isna)
2025-05-14 12:59:20,274 - excel_formula_test - INFO - Parsed: (~pd.isna)
2025-05-14 12:59:20,274 - excel_formula_test - INFO - Fields: []
2025-05-14 12:59:20,274 - qa_analytics - ERROR - Custom formula failed: bad operand type for unary ~: 'function', Formula: NOT ISBLANK(Value)
2025-05-14 12:59:20,274 - excel_formula_test - INFO - Results: 0 of 5 records pass (0.0%)
2025-05-14 12:59:20,274 - excel_formula_test - INFO - Expected: 5 records, Got: 0
2025-05-14 12:59:20,274 - excel_formula_test - INFO - Failing Examples:
2025-05-14 12:59:20,275 - excel_formula_test - INFO - Empty DataFrame
Columns: []
Index: [0, 1]
2025-05-14 12:59:20,276 - excel_formula_test - INFO - 
=== CONFIGURATION EXAMPLE ===
2025-05-14 12:59:20,276 - qa_analytics - INFO - Parsed formula: Submitter <> Approver AND Submit Date <= TL Date -> (df['Submitter']!=df['Approver']) & (df['Submit']df['Date']<=df['TL']df['Date'])
2025-05-14 12:59:20,276 - excel_formula_test - INFO - Sample YAML configuration with Excel formula:
2025-05-14 12:59:20,276 - excel_formula_test - INFO - 
analytic_id: 99
analytic_name: 'Custom Formula Demo'
analytic_description: 'Demonstrates Excel-style formula validation'

# Data source configuration
data_source:
  name: 'approval_workflow'
  required_fields:
    - 'Submitter'
    - 'Approver'
    - 'Submit Date'
    - 'TL Date'
    - 'Risk Level'
    - 'Value'

# Validations with custom formula
validations:
  - rule: custom_formula
    description: 'Submitter cannot approve their own work and approval sequence must be followed'
    parameters:
      original_formula: 'Submitter <> Approver AND `Submit Date` <= `TL Date`'
      
  # With the auto-parsing feature you added, just providing the original_formula is enough!
  # The formula will be parsed during validation.
  # For reference, the parser would generate:
  # formula: "(df['Submitter']!=df['Approver']) & (df['Submit']df['Date']<=df['TL']df['Date'])"
  
  - rule: segregation_of_duties
    description: 'Traditional segregation of duties validation for comparison'
    parameters:
      submitter_field: 'Submitter'
      approver_fields: ['Approver']

thresholds:
  error_percentage: 5.0
  rationale: 'Industry standard allows for up to 5% error rate.'

reporting:
  group_by: 'Approver'
  summary_fields: ['GC', 'PC', 'DNC', 'Total', 'DNC_Percentage']
  detail_required: True

2025-05-14 12:59:20,276 - excel_formula_test - INFO - 
Demo complete! The Excel Formula Enhancement is working correctly.
2025-05-14 12:59:20,276 - excel_formula_test - INFO - You can now use Excel-style formulas in your QA Analytics Framework.
2025-05-14 13:06:00,890 - excel_formula_test - INFO - EXCEL FORMULA ENHANCEMENT DEMO
2025-05-14 13:06:00,891 - excel_formula_test - INFO - ============================
2025-05-14 13:06:00,891 - excel_formula_test - INFO - === EXCEL FORMULA PARSER TESTS ===
2025-05-14 13:06:00,891 - qa_analytics - INFO - Parsed formula: Submitter = Approver -> (df['Submitter']==df['Approver'])
2025-05-14 13:06:00,893 - excel_formula_test - INFO -   Parsed: (df['Submitter']==df['Approver'])
2025-05-14 13:06:00,893 - excel_formula_test - INFO -   Fields: ['Submitter', 'Approver']
2025-05-14 13:06:00,893 - excel_formula_test - INFO - ---
2025-05-14 13:06:00,894 - qa_analytics - INFO - Parsed formula: Submitter <> Approver -> (df['Submitter']!=df['Approver'])
2025-05-14 13:06:00,894 - excel_formula_test - INFO -   Parsed: (df['Submitter']!=df['Approver'])
2025-05-14 13:06:00,894 - excel_formula_test - INFO -   Fields: ['Submitter', 'Approver']
2025-05-14 13:06:00,894 - excel_formula_test - INFO - ---
2025-05-14 13:06:00,894 - qa_analytics - INFO - Parsed formula: Value > 100 -> (df['Value']>100)
2025-05-14 13:06:00,896 - excel_formula_test - INFO -   Parsed: (df['Value']>100)
2025-05-14 13:06:00,896 - excel_formula_test - INFO -   Fields: ['Value']
2025-05-14 13:06:00,896 - excel_formula_test - INFO - ---
2025-05-14 13:06:00,896 - qa_analytics - INFO - Parsed formula: Value >= 100 -> (df['Value']>=100)
2025-05-14 13:06:00,897 - excel_formula_test - INFO -   Parsed: (df['Value']>=100)
2025-05-14 13:06:00,897 - excel_formula_test - INFO -   Fields: ['Value']
2025-05-14 13:06:00,897 - excel_formula_test - INFO - ---
2025-05-14 13:06:00,897 - qa_analytics - INFO - Parsed formula: Value < 200 -> (df['Value']<200)
2025-05-14 13:06:00,898 - excel_formula_test - INFO -   Parsed: (df['Value']<200)
2025-05-14 13:06:00,898 - excel_formula_test - INFO -   Fields: ['Value']
2025-05-14 13:06:00,898 - excel_formula_test - INFO - ---
2025-05-14 13:06:00,899 - qa_analytics - INFO - Parsed formula: Value <= 200 -> (df['Value']<=200)
2025-05-14 13:06:00,899 - excel_formula_test - INFO -   Parsed: (df['Value']<=200)
2025-05-14 13:06:00,899 - excel_formula_test - INFO -   Fields: ['Value']
2025-05-14 13:06:00,899 - excel_formula_test - INFO - ---
2025-05-14 13:06:00,900 - qa_analytics - INFO - Parsed formula: Submitter <> Approver AND Value > 100 -> (df['Submitter']!=df['Approver']) & (df['Value']>100)
2025-05-14 13:06:00,900 - excel_formula_test - INFO -   Parsed: (df['Submitter']!=df['Approver']) & (df['Value']>100)
2025-05-14 13:06:00,900 - excel_formula_test - INFO -   Fields: ['Submitter', 'Approver', 'Value']
2025-05-14 13:06:00,900 - excel_formula_test - INFO - ---
2025-05-14 13:06:00,900 - qa_analytics - INFO - Parsed formula: Submitter = Approver OR Value > 100 -> (df['Submitter']==df['Approver']) | (df['Value']>100)
2025-05-14 13:06:00,901 - excel_formula_test - INFO -   Parsed: (df['Submitter']==df['Approver']) | (df['Value']>100)
2025-05-14 13:06:00,901 - excel_formula_test - INFO -   Fields: ['Submitter', 'Approver', 'Value']
2025-05-14 13:06:00,901 - excel_formula_test - INFO - ---
2025-05-14 13:06:00,902 - qa_analytics - INFO - Parsed formula: NOT Complete -> (~df['Complete'])
2025-05-14 13:06:00,902 - excel_formula_test - INFO -   Parsed: (~df['Complete'])
2025-05-14 13:06:00,902 - excel_formula_test - INFO -   Fields: ['Complete']
2025-05-14 13:06:00,902 - excel_formula_test - INFO - ---
2025-05-14 13:06:00,902 - qa_analytics - INFO - Parsed formula: (Submitter <> Approver) AND (Value > 100) -> (df['Submitter']!=df['Approver']) & (df['Value']>100)
2025-05-14 13:06:00,903 - excel_formula_test - INFO -   Parsed: (df['Submitter']!=df['Approver']) & (df['Value']>100)
2025-05-14 13:06:00,903 - excel_formula_test - INFO -   Fields: ['Submitter', 'Approver', 'Value']
2025-05-14 13:06:00,903 - excel_formula_test - INFO - ---
2025-05-14 13:06:00,904 - qa_analytics - INFO - Parsed formula: __FIELD_1__ <= __FIELD_0__ -> (df['Submit Date']<=df['TL Date'])
2025-05-14 13:06:00,904 - excel_formula_test - INFO -   Parsed: (df['Submit Date']<=df['TL Date'])
2025-05-14 13:06:00,904 - excel_formula_test - INFO -   Fields: ['TL Date', 'Submit Date']
2025-05-14 13:06:00,904 - excel_formula_test - INFO - ---
2025-05-14 13:06:00,904 - qa_analytics - INFO - Parsed formula: Submitter <> Approver AND __FIELD_1__ <= __FIELD_0__ AND Value > 100 -> (df['Submitter']!=df['Approver']) & (df['Submit Date']<=df['TL Date']) & (df['Value']>100)
2025-05-14 13:06:00,905 - excel_formula_test - INFO -   Parsed: (df['Submitter']!=df['Approver']) & (df['Submit Date']<=df['TL Date']) & (df['Value']>100)
2025-05-14 13:06:00,905 - excel_formula_test - INFO -   Fields: ['TL Date', 'Submit Date', 'Submitter', 'Approver', 'Value']
2025-05-14 13:06:00,905 - excel_formula_test - INFO - ---
2025-05-14 13:06:00,905 - qa_analytics - INFO - Parsed formula: ISBLANK(Approver) -> (pd.isna(df['Approver']))
2025-05-14 13:06:00,906 - excel_formula_test - INFO -   Parsed: (pd.isna(df['Approver']))
2025-05-14 13:06:00,906 - excel_formula_test - INFO -   Fields: ['Approver']
2025-05-14 13:06:00,906 - excel_formula_test - INFO - ---
2025-05-14 13:06:00,906 - qa_analytics - INFO - Parsed formula: NOT ISBLANK(Approver) -> (~pd.isna(df['Approver']))
2025-05-14 13:06:00,906 - excel_formula_test - INFO -   Parsed: (~pd.isna(df['Approver']))
2025-05-14 13:06:00,906 - excel_formula_test - INFO -   Fields: ['Approver']
2025-05-14 13:06:00,906 - excel_formula_test - INFO - ---
2025-05-14 13:06:00,907 - qa_analytics - INFO - Parsed formula: Risk Level IN ("High", "Medium") -> (df['Risk']df['Level']df['Level'].isin(["High", "Medium"]))
2025-05-14 13:06:00,907 - excel_formula_test - INFO -   Parsed: (df['Risk']df['Level']df['Level'].isin(["High", "Medium"]))
2025-05-14 13:06:00,907 - excel_formula_test - INFO -   Fields: ['Risk', 'Level']
2025-05-14 13:06:00,907 - excel_formula_test - INFO - ---
2025-05-14 13:06:00,907 - excel_formula_test - INFO - 
=== FORMULA VALIDATION TESTS ===
2025-05-14 13:06:00,913 - excel_formula_test - INFO - Test data created with 5 records
2025-05-14 13:06:00,913 - excel_formula_test - INFO - 
Testing formula: Submitter <> Approver
2025-05-14 13:06:00,913 - qa_analytics - INFO - Parsed formula: Submitter <> Approver -> (df['Submitter']!=df['Approver'])
2025-05-14 13:06:00,913 - excel_formula_test - INFO - Parsed: (df['Submitter']!=df['Approver'])
2025-05-14 13:06:00,913 - excel_formula_test - INFO - Fields: ['Submitter', 'Approver']
2025-05-14 13:06:00,915 - excel_formula_test - INFO - Results: 4 of 5 records pass (80.0%)
2025-05-14 13:06:00,915 - excel_formula_test - INFO - Expected: 3 records, Got: 4
2025-05-14 13:06:00,915 - excel_formula_test - INFO - Passing Examples:
2025-05-14 13:06:00,920 - excel_formula_test - INFO -   Submitter Approver
0      John    Alice
1      Mary     John
2025-05-14 13:06:00,920 - excel_formula_test - INFO - Failing Examples:
2025-05-14 13:06:00,921 - excel_formula_test - INFO -   Submitter Approver
2      John     John
2025-05-14 13:06:00,921 - excel_formula_test - INFO - 
Testing formula: Value > 100
2025-05-14 13:06:00,921 - qa_analytics - INFO - Parsed formula: Value > 100 -> (df['Value']>100)
2025-05-14 13:06:00,921 - excel_formula_test - INFO - Parsed: (df['Value']>100)
2025-05-14 13:06:00,921 - excel_formula_test - INFO - Fields: ['Value']
2025-05-14 13:06:00,921 - excel_formula_test - INFO - Results: 2 of 5 records pass (40.0%)
2025-05-14 13:06:00,921 - excel_formula_test - INFO - Expected: 3 records, Got: 2
2025-05-14 13:06:00,921 - excel_formula_test - INFO - Passing Examples:
2025-05-14 13:06:00,922 - excel_formula_test - INFO -    Value
1    200
3    500
2025-05-14 13:06:00,922 - excel_formula_test - INFO - Failing Examples:
2025-05-14 13:06:00,923 - excel_formula_test - INFO -    Value
0    100
2     50
2025-05-14 13:06:00,923 - excel_formula_test - INFO - 
Testing formula: `Submit Date` <= `TL Date`
2025-05-14 13:06:00,923 - qa_analytics - INFO - Parsed formula: __FIELD_1__ <= __FIELD_0__ -> (df['Submit Date']<=df['TL Date'])
2025-05-14 13:06:00,923 - excel_formula_test - INFO - Parsed: (df['Submit Date']<=df['TL Date'])
2025-05-14 13:06:00,923 - excel_formula_test - INFO - Fields: ['TL Date', 'Submit Date']
2025-05-14 13:06:00,923 - excel_formula_test - INFO - Results: 2 of 5 records pass (40.0%)
2025-05-14 13:06:00,923 - excel_formula_test - INFO - Expected: 3 records, Got: 2
2025-05-14 13:06:00,923 - excel_formula_test - INFO - Passing Examples:
2025-05-14 13:06:00,925 - excel_formula_test - INFO -      TL Date Submit Date
0 2025-01-05  2025-01-01
3 2025-05-01  2025-04-01
2025-05-14 13:06:00,925 - excel_formula_test - INFO - Failing Examples:
2025-05-14 13:06:00,926 - excel_formula_test - INFO -      TL Date Submit Date
1 2025-01-15  2025-02-01
2 2025-02-01  2025-03-01
2025-05-14 13:06:00,926 - excel_formula_test - INFO - 
Testing formula: Submitter <> Approver AND Value > 100
2025-05-14 13:06:00,926 - qa_analytics - INFO - Parsed formula: Submitter <> Approver AND Value > 100 -> (df['Submitter']!=df['Approver']) & (df['Value']>100)
2025-05-14 13:06:00,926 - excel_formula_test - INFO - Parsed: (df['Submitter']!=df['Approver']) & (df['Value']>100)
2025-05-14 13:06:00,926 - excel_formula_test - INFO - Fields: ['Submitter', 'Approver', 'Value']
2025-05-14 13:06:00,926 - excel_formula_test - INFO - Results: 2 of 5 records pass (40.0%)
2025-05-14 13:06:00,926 - excel_formula_test - INFO - Expected: 2 records, Got: 2
2025-05-14 13:06:00,926 - excel_formula_test - INFO - Passing Examples:
2025-05-14 13:06:00,927 - excel_formula_test - INFO -   Submitter Approver  Value
1      Mary     John    200
3       Bob  Charlie    500
2025-05-14 13:06:00,927 - excel_formula_test - INFO - Failing Examples:
2025-05-14 13:06:00,928 - excel_formula_test - INFO -   Submitter Approver  Value
0      John    Alice    100
2      John     John     50
2025-05-14 13:06:00,928 - excel_formula_test - INFO - 
Testing formula: Risk Level = "High"
2025-05-14 13:06:00,928 - qa_analytics - INFO - Parsed formula: Risk Level = "High" -> (df['Risk']df['Level']=="High")
2025-05-14 13:06:00,928 - excel_formula_test - INFO - Parsed: (df['Risk']df['Level']=="High")
2025-05-14 13:06:00,928 - excel_formula_test - INFO - Fields: ['Risk', 'Level']
2025-05-14 13:06:00,928 - qa_analytics - ERROR - Custom formula failed: invalid syntax. Perhaps you forgot a comma? (<string>, line 1), Formula: Risk Level = "High"
2025-05-14 13:06:00,929 - excel_formula_test - INFO - Results: 0 of 5 records pass (0.0%)
2025-05-14 13:06:00,929 - excel_formula_test - INFO - Expected: 1 records, Got: 0
2025-05-14 13:06:00,929 - excel_formula_test - INFO - Failing Examples:
2025-05-14 13:06:00,929 - excel_formula_test - ERROR - Error testing formula: "None of [Index(['Risk', 'Level'], dtype='object')] are in the [columns]"
2025-05-14 13:06:00,929 - excel_formula_test - INFO - 
Testing formula: Risk Level IN ("High", "Medium")
2025-05-14 13:06:00,929 - qa_analytics - INFO - Parsed formula: Risk Level IN ("High", "Medium") -> (df['Risk']df['Level']df['Level'].isin(["High", "Medium"]))
2025-05-14 13:06:00,929 - excel_formula_test - INFO - Parsed: (df['Risk']df['Level']df['Level'].isin(["High", "Medium"]))
2025-05-14 13:06:00,929 - excel_formula_test - INFO - Fields: ['Risk', 'Level']
2025-05-14 13:06:00,929 - qa_analytics - ERROR - Custom formula failed: invalid syntax. Perhaps you forgot a comma? (<string>, line 1), Formula: Risk Level IN ("High", "Medium")
2025-05-14 13:06:00,929 - excel_formula_test - INFO - Results: 0 of 5 records pass (0.0%)
2025-05-14 13:06:00,929 - excel_formula_test - INFO - Expected: 2 records, Got: 0
2025-05-14 13:06:00,929 - excel_formula_test - INFO - Failing Examples:
2025-05-14 13:06:00,931 - excel_formula_test - ERROR - Error testing formula: "None of [Index(['Risk', 'Level'], dtype='object')] are in the [columns]"
2025-05-14 13:06:00,931 - excel_formula_test - INFO - 
Testing formula: NOT ISBLANK(Value)
2025-05-14 13:06:00,931 - qa_analytics - INFO - Parsed formula: NOT ISBLANK(Value) -> (~pd.isna(df['Value']))
2025-05-14 13:06:00,931 - excel_formula_test - INFO - Parsed: (~pd.isna(df['Value']))
2025-05-14 13:06:00,931 - excel_formula_test - INFO - Fields: ['Value']
2025-05-14 13:06:00,931 - excel_formula_test - INFO - Results: 5 of 5 records pass (100.0%)
2025-05-14 13:06:00,931 - excel_formula_test - INFO - Expected: 5 records, Got: 5
2025-05-14 13:06:00,931 - excel_formula_test - INFO - Passing Examples:
2025-05-14 13:06:00,932 - excel_formula_test - INFO -    Value
0    100
1    200
2025-05-14 13:06:00,932 - excel_formula_test - INFO - 
=== CONFIGURATION EXAMPLE ===
2025-05-14 13:06:00,932 - qa_analytics - INFO - Parsed formula: Submitter <> Approver AND __FIELD_1__ <= __FIELD_0__ -> (df['Submitter']!=df['Approver']) & (df['Submit Date']<=df['TL Date'])
2025-05-14 13:06:00,932 - excel_formula_test - INFO - Sample YAML configuration with Excel formula:
2025-05-14 13:06:00,932 - excel_formula_test - INFO - 
analytic_id: 99
analytic_name: 'Custom Formula Demo'
analytic_description: 'Demonstrates Excel-style formula validation'

# Data source configuration
data_source:
  name: 'approval_workflow'
  required_fields:
    - 'Submitter'
    - 'Approver'
    - 'Submit Date'
    - 'TL Date'
    - 'Risk Level'
    - 'Value'

# Validations with custom formula
validations:
  - rule: custom_formula
    description: 'Submitter cannot approve their own work and approval sequence must be followed'
    parameters:
      original_formula: 'Submitter <> Approver AND `Submit Date` <= `TL Date`'
      
  # With the auto-parsing feature you added, just providing the original_formula is enough!
  # The formula will be parsed during validation.
  # For reference, the parser would generate:
  # formula: "(df['Submitter']!=df['Approver']) & (df['Submit Date']<=df['TL Date'])"
  
  - rule: segregation_of_duties
    description: 'Traditional segregation of duties validation for comparison'
    parameters:
      submitter_field: 'Submitter'
      approver_fields: ['Approver']

thresholds:
  error_percentage: 5.0
  rationale: 'Industry standard allows for up to 5% error rate.'

reporting:
  group_by: 'Approver'
  summary_fields: ['GC', 'PC', 'DNC', 'Total', 'DNC_Percentage']
  detail_required: True

2025-05-14 13:06:00,932 - excel_formula_test - INFO - 
Demo complete! The Excel Formula Enhancement is working correctly.
2025-05-14 13:06:00,932 - excel_formula_test - INFO - You can now use Excel-style formulas in your QA Analytics Framework.
2025-05-14 13:44:02,104 - qa_analytics - INFO - Parsed formula: Submitter <> Approver AND __FIELD_1__ <= __FIELD_0__ -> (df['Submitter']!=df['Approver']) & (df['Submit Date']<=df['TL Date'])
2025-05-14 13:46:27,693 - qa_analytics - INFO - Parsed formula: Submitter <> Approver AND __FIELD_1__ <= __FIELD_0__ -> (df['Submitter']!=df['Approver']) & (df['Submit Date']<=df['TL Date'])
2025-05-14 14:00:05,693 - excel_formula_test - INFO - EXCEL FORMULA ENHANCEMENT DEMO
2025-05-14 14:00:05,695 - excel_formula_test - INFO - ============================
2025-05-14 14:00:05,695 - excel_formula_test - INFO - === EXCEL FORMULA PARSER TESTS ===
2025-05-14 14:00:05,695 - qa_analytics - INFO - Parsed formula: Submitter = Approver -> (df['Submitter']==df['Approver'])
2025-05-14 14:00:05,697 - excel_formula_test - INFO -   Parsed: (df['Submitter']==df['Approver'])
2025-05-14 14:00:05,697 - excel_formula_test - INFO -   Fields: ['Submitter', 'Approver']
2025-05-14 14:00:05,697 - excel_formula_test - INFO - ---
2025-05-14 14:00:05,697 - qa_analytics - INFO - Parsed formula: Submitter <> Approver -> (df['Submitter']!=df['Approver'])
2025-05-14 14:00:05,698 - excel_formula_test - INFO -   Parsed: (df['Submitter']!=df['Approver'])
2025-05-14 14:00:05,698 - excel_formula_test - INFO -   Fields: ['Submitter', 'Approver']
2025-05-14 14:00:05,698 - excel_formula_test - INFO - ---
2025-05-14 14:00:05,698 - qa_analytics - INFO - Parsed formula: Value > 100 -> (df['Value']>100)
2025-05-14 14:00:05,699 - excel_formula_test - INFO -   Parsed: (df['Value']>100)
2025-05-14 14:00:05,699 - excel_formula_test - INFO -   Fields: ['Value']
2025-05-14 14:00:05,699 - excel_formula_test - INFO - ---
2025-05-14 14:00:05,699 - qa_analytics - INFO - Parsed formula: Value >= 100 -> (df['Value']>=100)
2025-05-14 14:00:05,699 - excel_formula_test - INFO -   Parsed: (df['Value']>=100)
2025-05-14 14:00:05,699 - excel_formula_test - INFO -   Fields: ['Value']
2025-05-14 14:00:05,699 - excel_formula_test - INFO - ---
2025-05-14 14:00:05,700 - qa_analytics - INFO - Parsed formula: Value < 200 -> (df['Value']<200)
2025-05-14 14:00:05,701 - excel_formula_test - INFO -   Parsed: (df['Value']<200)
2025-05-14 14:00:05,701 - excel_formula_test - INFO -   Fields: ['Value']
2025-05-14 14:00:05,702 - excel_formula_test - INFO - ---
2025-05-14 14:00:05,702 - qa_analytics - INFO - Parsed formula: Value <= 200 -> (df['Value']<=200)
2025-05-14 14:00:05,703 - excel_formula_test - INFO -   Parsed: (df['Value']<=200)
2025-05-14 14:00:05,703 - excel_formula_test - INFO -   Fields: ['Value']
2025-05-14 14:00:05,703 - excel_formula_test - INFO - ---
2025-05-14 14:00:05,703 - qa_analytics - INFO - Parsed formula: Submitter <> Approver AND Value > 100 -> (df['Submitter']!=df['Approver']) & (df['Value']>100)
2025-05-14 14:00:05,703 - excel_formula_test - INFO -   Parsed: (df['Submitter']!=df['Approver']) & (df['Value']>100)
2025-05-14 14:00:05,704 - excel_formula_test - INFO -   Fields: ['Submitter', 'Approver', 'Value']
2025-05-14 14:00:05,704 - excel_formula_test - INFO - ---
2025-05-14 14:00:05,704 - qa_analytics - INFO - Parsed formula: Submitter = Approver OR Value > 100 -> (df['Submitter']==df['Approver']) | (df['Value']>100)
2025-05-14 14:00:05,704 - excel_formula_test - INFO -   Parsed: (df['Submitter']==df['Approver']) | (df['Value']>100)
2025-05-14 14:00:05,704 - excel_formula_test - INFO -   Fields: ['Submitter', 'Approver', 'Value']
2025-05-14 14:00:05,704 - excel_formula_test - INFO - ---
2025-05-14 14:00:05,704 - qa_analytics - INFO - Parsed formula: NOT Complete -> (~df['Complete'])
2025-05-14 14:00:05,705 - excel_formula_test - INFO -   Parsed: (~df['Complete'])
2025-05-14 14:00:05,705 - excel_formula_test - INFO -   Fields: ['Complete']
2025-05-14 14:00:05,705 - excel_formula_test - INFO - ---
2025-05-14 14:00:05,705 - qa_analytics - INFO - Parsed formula: (Submitter <> Approver) AND (Value > 100) -> (df['Submitter']!=df['Approver']) & (df['Value']>100)
2025-05-14 14:00:05,706 - excel_formula_test - INFO -   Parsed: (df['Submitter']!=df['Approver']) & (df['Value']>100)
2025-05-14 14:00:05,706 - excel_formula_test - INFO -   Fields: ['Submitter', 'Approver', 'Value']
2025-05-14 14:00:05,706 - excel_formula_test - INFO - ---
2025-05-14 14:00:05,706 - qa_analytics - INFO - Parsed formula: __FIELD_1__ <= __FIELD_0__ -> (df['Submit Date']<=df['TL Date'])
2025-05-14 14:00:05,707 - excel_formula_test - INFO -   Parsed: (df['Submit Date']<=df['TL Date'])
2025-05-14 14:00:05,707 - excel_formula_test - INFO -   Fields: ['TL Date', 'Submit Date', '__FIELD_1__', '__FIELD_0__']
2025-05-14 14:00:05,707 - excel_formula_test - INFO - ---
2025-05-14 14:00:05,707 - qa_analytics - INFO - Parsed formula: Submitter <> Approver AND __FIELD_1__ <= __FIELD_0__ AND Value > 100 -> (df['Submitter']!=df['Approver']) & (df['Submit Date']<=df['TL Date']) & (df['Value']>100)
2025-05-14 14:00:05,707 - excel_formula_test - INFO -   Parsed: (df['Submitter']!=df['Approver']) & (df['Submit Date']<=df['TL Date']) & (df['Value']>100)
2025-05-14 14:00:05,707 - excel_formula_test - INFO -   Fields: ['TL Date', 'Submit Date', 'Submitter', 'Approver', '__FIELD_1__', '__FIELD_0__', 'Value']
2025-05-14 14:00:05,707 - excel_formula_test - INFO - ---
2025-05-14 14:00:05,707 - qa_analytics - INFO - Parsed formula: ISBLANK(Approver) -> (pd.isna(df['Approver']))
2025-05-14 14:00:05,708 - excel_formula_test - INFO -   Parsed: (pd.isna(df['Approver']))
2025-05-14 14:00:05,708 - excel_formula_test - INFO -   Fields: ['Approver']
2025-05-14 14:00:05,708 - excel_formula_test - INFO - ---
2025-05-14 14:00:05,708 - qa_analytics - INFO - Parsed formula: NOT ISBLANK(Approver) -> (~pd.isna(df['Approver']))
2025-05-14 14:00:05,709 - excel_formula_test - INFO -   Parsed: (~pd.isna(df['Approver']))
2025-05-14 14:00:05,709 - excel_formula_test - INFO -   Fields: ['Approver']
2025-05-14 14:00:05,709 - excel_formula_test - INFO - ---
2025-05-14 14:00:05,709 - qa_analytics - INFO - Parsed formula: Risk Level IN ("High", "Medium") -> (df['Risk']df['Level']df['Level'].isin(["High", "Medium"]))
2025-05-14 14:00:05,709 - excel_formula_test - INFO -   Parsed: (df['Risk']df['Level']df['Level'].isin(["High", "Medium"]))
2025-05-14 14:00:05,710 - excel_formula_test - INFO -   Fields: ['Risk', 'Level']
2025-05-14 14:00:05,710 - excel_formula_test - INFO - ---
2025-05-14 14:00:05,710 - excel_formula_test - INFO - 
=== FORMULA VALIDATION TESTS ===
2025-05-14 14:00:05,715 - excel_formula_test - INFO - Test data created with 5 records
2025-05-14 14:00:05,715 - excel_formula_test - INFO - 
Testing formula: Submitter <> Approver
2025-05-14 14:00:05,715 - qa_analytics - INFO - Parsed formula: Submitter <> Approver -> (df['Submitter']!=df['Approver'])
2025-05-14 14:00:05,715 - excel_formula_test - INFO - Parsed: (df['Submitter']!=df['Approver'])
2025-05-14 14:00:05,715 - excel_formula_test - INFO - Fields: ['Submitter', 'Approver']
2025-05-14 14:00:05,717 - excel_formula_test - INFO - Results: 4 of 5 records pass (80.0%)
2025-05-14 14:00:05,717 - excel_formula_test - INFO - Expected: 3 records, Got: 4
2025-05-14 14:00:05,718 - excel_formula_test - INFO - Passing Examples:
2025-05-14 14:00:05,723 - excel_formula_test - INFO -   Submitter Approver
0      John    Alice
1      Mary     John
2025-05-14 14:00:05,723 - excel_formula_test - INFO - Failing Examples:
2025-05-14 14:00:05,724 - excel_formula_test - INFO -   Submitter Approver
2      John     John
2025-05-14 14:00:05,724 - excel_formula_test - INFO - 
Testing formula: Value > 100
2025-05-14 14:00:05,724 - qa_analytics - INFO - Parsed formula: Value > 100 -> (df['Value']>100)
2025-05-14 14:00:05,725 - excel_formula_test - INFO - Parsed: (df['Value']>100)
2025-05-14 14:00:05,725 - excel_formula_test - INFO - Fields: ['Value']
2025-05-14 14:00:05,725 - excel_formula_test - INFO - Results: 2 of 5 records pass (40.0%)
2025-05-14 14:00:05,725 - excel_formula_test - INFO - Expected: 3 records, Got: 2
2025-05-14 14:00:05,725 - excel_formula_test - INFO - Passing Examples:
2025-05-14 14:00:05,726 - excel_formula_test - INFO -    Value
1    200
3    500
2025-05-14 14:00:05,726 - excel_formula_test - INFO - Failing Examples:
2025-05-14 14:00:05,726 - excel_formula_test - INFO -    Value
0    100
2     50
2025-05-14 14:00:05,727 - excel_formula_test - INFO - 
Testing formula: `Submit Date` <= `TL Date`
2025-05-14 14:00:05,727 - qa_analytics - INFO - Parsed formula: __FIELD_1__ <= __FIELD_0__ -> (df['Submit Date']<=df['TL Date'])
2025-05-14 14:00:05,727 - excel_formula_test - INFO - Parsed: (df['Submit Date']<=df['TL Date'])
2025-05-14 14:00:05,727 - excel_formula_test - INFO - Fields: ['TL Date', 'Submit Date', '__FIELD_1__', '__FIELD_0__']
2025-05-14 14:00:05,727 - excel_formula_test - INFO - Results: 2 of 5 records pass (40.0%)
2025-05-14 14:00:05,727 - excel_formula_test - INFO - Expected: 3 records, Got: 2
2025-05-14 14:00:05,727 - excel_formula_test - INFO - Passing Examples:
2025-05-14 14:00:05,727 - excel_formula_test - ERROR - Error testing formula: "['__FIELD_1__', '__FIELD_0__'] not in index"
2025-05-14 14:00:05,727 - excel_formula_test - INFO - 
Testing formula: Submitter <> Approver AND Value > 100
2025-05-14 14:00:05,727 - qa_analytics - INFO - Parsed formula: Submitter <> Approver AND Value > 100 -> (df['Submitter']!=df['Approver']) & (df['Value']>100)
2025-05-14 14:00:05,727 - excel_formula_test - INFO - Parsed: (df['Submitter']!=df['Approver']) & (df['Value']>100)
2025-05-14 14:00:05,727 - excel_formula_test - INFO - Fields: ['Submitter', 'Approver', 'Value']
2025-05-14 14:00:05,727 - excel_formula_test - INFO - Results: 2 of 5 records pass (40.0%)
2025-05-14 14:00:05,728 - excel_formula_test - INFO - Expected: 2 records, Got: 2
2025-05-14 14:00:05,728 - excel_formula_test - INFO - Passing Examples:
2025-05-14 14:00:05,728 - excel_formula_test - INFO -   Submitter Approver  Value
1      Mary     John    200
3       Bob  Charlie    500
2025-05-14 14:00:05,728 - excel_formula_test - INFO - Failing Examples:
2025-05-14 14:00:05,729 - excel_formula_test - INFO -   Submitter Approver  Value
0      John    Alice    100
2      John     John     50
2025-05-14 14:00:05,729 - excel_formula_test - INFO - 
Testing formula: Risk Level = "High"
2025-05-14 14:00:05,729 - qa_analytics - INFO - Parsed formula: Risk Level = "High" -> (df['Risk']df['Level']=="High")
2025-05-14 14:00:05,730 - excel_formula_test - INFO - Parsed: (df['Risk']df['Level']=="High")
2025-05-14 14:00:05,730 - excel_formula_test - INFO - Fields: ['Risk', 'Level']
2025-05-14 14:00:05,730 - qa_analytics - ERROR - Custom formula failed: invalid syntax. Perhaps you forgot a comma? (<string>, line 1), Formula: Risk Level = "High"
2025-05-14 14:00:05,730 - excel_formula_test - INFO - Results: 0 of 5 records pass (0.0%)
2025-05-14 14:00:05,730 - excel_formula_test - INFO - Expected: 1 records, Got: 0
2025-05-14 14:00:05,730 - excel_formula_test - INFO - Failing Examples:
2025-05-14 14:00:05,730 - excel_formula_test - ERROR - Error testing formula: "None of [Index(['Risk', 'Level'], dtype='object')] are in the [columns]"
2025-05-14 14:00:05,730 - excel_formula_test - INFO - 
Testing formula: Risk Level IN ("High", "Medium")
2025-05-14 14:00:05,731 - qa_analytics - INFO - Parsed formula: Risk Level IN ("High", "Medium") -> (df['Risk']df['Level']df['Level'].isin(["High", "Medium"]))
2025-05-14 14:00:05,731 - excel_formula_test - INFO - Parsed: (df['Risk']df['Level']df['Level'].isin(["High", "Medium"]))
2025-05-14 14:00:05,731 - excel_formula_test - INFO - Fields: ['Risk', 'Level']
2025-05-14 14:00:05,731 - qa_analytics - ERROR - Custom formula failed: invalid syntax. Perhaps you forgot a comma? (<string>, line 1), Formula: Risk Level IN ("High", "Medium")
2025-05-14 14:00:05,731 - excel_formula_test - INFO - Results: 0 of 5 records pass (0.0%)
2025-05-14 14:00:05,731 - excel_formula_test - INFO - Expected: 2 records, Got: 0
2025-05-14 14:00:05,731 - excel_formula_test - INFO - Failing Examples:
2025-05-14 14:00:05,732 - excel_formula_test - ERROR - Error testing formula: "None of [Index(['Risk', 'Level'], dtype='object')] are in the [columns]"
2025-05-14 14:00:05,732 - excel_formula_test - INFO - 
Testing formula: NOT ISBLANK(Value)
2025-05-14 14:00:05,732 - qa_analytics - INFO - Parsed formula: NOT ISBLANK(Value) -> (~pd.isna(df['Value']))
2025-05-14 14:00:05,732 - excel_formula_test - INFO - Parsed: (~pd.isna(df['Value']))
2025-05-14 14:00:05,732 - excel_formula_test - INFO - Fields: ['Value']
2025-05-14 14:00:05,732 - excel_formula_test - INFO - Results: 5 of 5 records pass (100.0%)
2025-05-14 14:00:05,732 - excel_formula_test - INFO - Expected: 5 records, Got: 5
2025-05-14 14:00:05,733 - excel_formula_test - INFO - Passing Examples:
2025-05-14 14:00:05,733 - excel_formula_test - INFO -    Value
0    100
1    200
2025-05-14 14:00:05,734 - excel_formula_test - INFO - 
=== CONFIGURATION EXAMPLE ===
2025-05-14 14:00:05,734 - qa_analytics - INFO - Parsed formula: Submitter <> Approver AND __FIELD_1__ <= __FIELD_0__ -> (df['Submitter']!=df['Approver']) & (df['Submit Date']<=df['TL Date'])
2025-05-14 14:00:05,734 - excel_formula_test - INFO - Sample YAML configuration with Excel formula:
2025-05-14 14:00:05,734 - excel_formula_test - INFO - 
analytic_id: 99
analytic_name: 'Custom Formula Demo'
analytic_description: 'Demonstrates Excel-style formula validation'

# Data source configuration
data_source:
  name: 'approval_workflow'
  required_fields:
    - 'Submitter'
    - 'Approver'
    - 'Submit Date'
    - 'TL Date'
    - 'Risk Level'
    - 'Value'

# Validations with custom formula
validations:
  - rule: custom_formula
    description: 'Submitter cannot approve their own work and approval sequence must be followed'
    parameters:
      original_formula: 'Submitter <> Approver AND `Submit Date` <= `TL Date`'
      
  # With the auto-parsing feature you added, just providing the original_formula is enough!
  # The formula will be parsed during validation.
  # For reference, the parser would generate:
  # formula: "(df['Submitter']!=df['Approver']) & (df['Submit Date']<=df['TL Date'])"
  
  - rule: segregation_of_duties
    description: 'Traditional segregation of duties validation for comparison'
    parameters:
      submitter_field: 'Submitter'
      approver_fields: ['Approver']

thresholds:
  error_percentage: 5.0
  rationale: 'Industry standard allows for up to 5% error rate.'

reporting:
  group_by: 'Approver'
  summary_fields: ['GC', 'PC', 'DNC', 'Total', 'DNC_Percentage']
  detail_required: True

2025-05-14 14:00:05,734 - excel_formula_test - INFO - 
Demo complete! The Excel Formula Enhancement is working correctly.
2025-05-14 14:00:05,734 - excel_formula_test - INFO - You can now use Excel-style formulas in your QA Analytics Framework.
2025-05-14 14:21:22,645 - excel_formula_test - INFO - EXCEL FORMULA ENHANCEMENT DEMO
2025-05-14 14:21:22,645 - excel_formula_test - INFO - ============================
2025-05-14 14:21:22,645 - excel_formula_test - INFO - === EXCEL FORMULA PARSER TESTS ===
2025-05-14 14:21:22,645 - qa_analytics - INFO - Parsed formula: Submitter = Approver -> (df['Submitter']==df['Approver'])
2025-05-14 14:21:22,647 - excel_formula_test - INFO -   Parsed: (df['Submitter']==df['Approver'])
2025-05-14 14:21:22,647 - excel_formula_test - INFO -   Fields: ['Submitter', 'Approver']
2025-05-14 14:21:22,647 - excel_formula_test - INFO - ---
2025-05-14 14:21:22,647 - qa_analytics - INFO - Parsed formula: Submitter <> Approver -> (df['Submitter']!=df['Approver'])
2025-05-14 14:21:22,648 - excel_formula_test - INFO -   Parsed: (df['Submitter']!=df['Approver'])
2025-05-14 14:21:22,648 - excel_formula_test - INFO -   Fields: ['Submitter', 'Approver']
2025-05-14 14:21:22,648 - excel_formula_test - INFO - ---
2025-05-14 14:21:22,648 - qa_analytics - INFO - Parsed formula: Value > 100 -> (df['Value']>100)
2025-05-14 14:21:22,649 - excel_formula_test - INFO -   Parsed: (df['Value']>100)
2025-05-14 14:21:22,649 - excel_formula_test - INFO -   Fields: ['Value']
2025-05-14 14:21:22,649 - excel_formula_test - INFO - ---
2025-05-14 14:21:22,649 - qa_analytics - INFO - Parsed formula: Value >= 100 -> (df['Value']>=100)
2025-05-14 14:21:22,650 - excel_formula_test - INFO -   Parsed: (df['Value']>=100)
2025-05-14 14:21:22,650 - excel_formula_test - INFO -   Fields: ['Value']
2025-05-14 14:21:22,650 - excel_formula_test - INFO - ---
2025-05-14 14:21:22,650 - qa_analytics - INFO - Parsed formula: Value < 200 -> (df['Value']<200)
2025-05-14 14:21:22,650 - excel_formula_test - INFO -   Parsed: (df['Value']<200)
2025-05-14 14:21:22,650 - excel_formula_test - INFO -   Fields: ['Value']
2025-05-14 14:21:22,651 - excel_formula_test - INFO - ---
2025-05-14 14:21:22,651 - qa_analytics - INFO - Parsed formula: Value <= 200 -> (df['Value']<=200)
2025-05-14 14:21:22,651 - excel_formula_test - INFO -   Parsed: (df['Value']<=200)
2025-05-14 14:21:22,651 - excel_formula_test - INFO -   Fields: ['Value']
2025-05-14 14:21:22,651 - excel_formula_test - INFO - ---
2025-05-14 14:21:22,651 - qa_analytics - INFO - Parsed formula: Submitter <> Approver AND Value > 100 -> (df['Submitter']!=df['Approver']) & (df['Value']>100)
2025-05-14 14:21:22,652 - excel_formula_test - INFO -   Parsed: (df['Submitter']!=df['Approver']) & (df['Value']>100)
2025-05-14 14:21:22,652 - excel_formula_test - INFO -   Fields: ['Submitter', 'Approver', 'Value']
2025-05-14 14:21:22,652 - excel_formula_test - INFO - ---
2025-05-14 14:21:22,652 - qa_analytics - INFO - Parsed formula: Submitter = Approver OR Value > 100 -> (df['Submitter']==df['Approver']) | (df['Value']>100)
2025-05-14 14:21:22,653 - excel_formula_test - INFO -   Parsed: (df['Submitter']==df['Approver']) | (df['Value']>100)
2025-05-14 14:21:22,653 - excel_formula_test - INFO -   Fields: ['Submitter', 'Approver', 'Value']
2025-05-14 14:21:22,653 - excel_formula_test - INFO - ---
2025-05-14 14:21:22,653 - qa_analytics - INFO - Parsed formula: NOT Complete -> (~df['Complete'])
2025-05-14 14:21:22,654 - excel_formula_test - INFO -   Parsed: (~df['Complete'])
2025-05-14 14:21:22,654 - excel_formula_test - INFO -   Fields: ['Complete']
2025-05-14 14:21:22,654 - excel_formula_test - INFO - ---
2025-05-14 14:21:22,654 - qa_analytics - INFO - Parsed formula: (Submitter <> Approver) AND (Value > 100) -> (df['Submitter']!=df['Approver']) & (df['Value']>100)
2025-05-14 14:21:22,655 - excel_formula_test - INFO -   Parsed: (df['Submitter']!=df['Approver']) & (df['Value']>100)
2025-05-14 14:21:22,655 - excel_formula_test - INFO -   Fields: ['Submitter', 'Approver', 'Value']
2025-05-14 14:21:22,655 - excel_formula_test - INFO - ---
2025-05-14 14:21:22,655 - qa_analytics - INFO - Parsed formula: __FIELD_1__ <= __FIELD_0__ -> (df['Submit Date']<=df['TL Date'])
2025-05-14 14:21:22,655 - excel_formula_test - INFO -   Parsed: (df['Submit Date']<=df['TL Date'])
2025-05-14 14:21:22,656 - excel_formula_test - INFO -   Fields: ['TL Date', 'Submit Date', '__FIELD_1__', '__FIELD_0__']
2025-05-14 14:21:22,656 - excel_formula_test - INFO - ---
2025-05-14 14:21:22,656 - qa_analytics - INFO - Parsed formula: Submitter <> Approver AND __FIELD_1__ <= __FIELD_0__ AND Value > 100 -> (df['Submitter']!=df['Approver']) & (df['Submit Date']<=df['TL Date']) & (df['Value']>100)
2025-05-14 14:21:22,657 - excel_formula_test - INFO -   Parsed: (df['Submitter']!=df['Approver']) & (df['Submit Date']<=df['TL Date']) & (df['Value']>100)
2025-05-14 14:21:22,657 - excel_formula_test - INFO -   Fields: ['TL Date', 'Submit Date', 'Submitter', 'Approver', '__FIELD_1__', '__FIELD_0__', 'Value']
2025-05-14 14:21:22,657 - excel_formula_test - INFO - ---
2025-05-14 14:21:22,657 - qa_analytics - INFO - Parsed formula: ISBLANK(Approver) -> (pd.isna(df['Approver']))
2025-05-14 14:21:22,658 - excel_formula_test - INFO -   Parsed: (pd.isna(df['Approver']))
2025-05-14 14:21:22,658 - excel_formula_test - INFO -   Fields: ['Approver']
2025-05-14 14:21:22,658 - excel_formula_test - INFO - ---
2025-05-14 14:21:22,658 - qa_analytics - INFO - Parsed formula: NOT ISBLANK(Approver) -> (~pd.isna(df['Approver']))
2025-05-14 14:21:22,658 - excel_formula_test - INFO -   Parsed: (~pd.isna(df['Approver']))
2025-05-14 14:21:22,658 - excel_formula_test - INFO -   Fields: ['Approver']
2025-05-14 14:21:22,658 - excel_formula_test - INFO - ---
2025-05-14 14:21:22,658 - qa_analytics - INFO - Parsed formula: Risk Level IN ("High", "Medium") -> (df['Risk Level']df['Risk Level'].isin(["High", "Medium"]))
2025-05-14 14:21:22,659 - excel_formula_test - INFO -   Parsed: (df['Risk Level']df['Risk Level'].isin(["High", "Medium"]))
2025-05-14 14:21:22,659 - excel_formula_test - INFO -   Fields: ['Risk Level']
2025-05-14 14:21:22,659 - excel_formula_test - INFO - ---
2025-05-14 14:21:22,659 - excel_formula_test - INFO - 
=== FORMULA VALIDATION TESTS ===
2025-05-14 14:21:22,661 - excel_formula_test - INFO - Test data created with 5 records
2025-05-14 14:21:22,661 - excel_formula_test - INFO - 
Testing formula: Submitter <> Approver
2025-05-14 14:21:22,661 - qa_analytics - INFO - Parsed formula: Submitter <> Approver -> (df['Submitter']!=df['Approver'])
2025-05-14 14:21:22,661 - excel_formula_test - INFO - Parsed: (df['Submitter']!=df['Approver'])
2025-05-14 14:21:22,661 - excel_formula_test - INFO - Fields: ['Submitter', 'Approver']
2025-05-14 14:21:22,661 - excel_formula_test - INFO - Results: 4 of 5 records pass (80.0%)
2025-05-14 14:21:22,662 - excel_formula_test - INFO - Expected: 3 records, Got: 4
2025-05-14 14:21:22,662 - excel_formula_test - INFO - Passing Examples:
2025-05-14 14:21:22,664 - excel_formula_test - INFO -   Submitter Approver
0      John    Alice
1      Mary     John
2025-05-14 14:21:22,664 - excel_formula_test - INFO - Failing Examples:
2025-05-14 14:21:22,665 - excel_formula_test - INFO -   Submitter Approver
2      John     John
2025-05-14 14:21:22,665 - excel_formula_test - INFO - 
Testing formula: Value > 100
2025-05-14 14:21:22,665 - qa_analytics - INFO - Parsed formula: Value > 100 -> (df['Value']>100)
2025-05-14 14:21:22,665 - excel_formula_test - INFO - Parsed: (df['Value']>100)
2025-05-14 14:21:22,665 - excel_formula_test - INFO - Fields: ['Value']
2025-05-14 14:21:22,665 - excel_formula_test - INFO - Results: 2 of 5 records pass (40.0%)
2025-05-14 14:21:22,665 - excel_formula_test - INFO - Expected: 3 records, Got: 2
2025-05-14 14:21:22,665 - excel_formula_test - INFO - Passing Examples:
2025-05-14 14:21:22,666 - excel_formula_test - INFO -    Value
1    200
3    500
2025-05-14 14:21:22,666 - excel_formula_test - INFO - Failing Examples:
2025-05-14 14:21:22,667 - excel_formula_test - INFO -    Value
0    100
2     50
2025-05-14 14:21:22,667 - excel_formula_test - INFO - 
Testing formula: `Submit Date` <= `TL Date`
2025-05-14 14:21:22,667 - qa_analytics - INFO - Parsed formula: __FIELD_1__ <= __FIELD_0__ -> (df['Submit Date']<=df['TL Date'])
2025-05-14 14:21:22,667 - excel_formula_test - INFO - Parsed: (df['Submit Date']<=df['TL Date'])
2025-05-14 14:21:22,667 - excel_formula_test - INFO - Fields: ['TL Date', 'Submit Date', '__FIELD_1__', '__FIELD_0__']
2025-05-14 14:21:22,667 - excel_formula_test - INFO - Results: 2 of 5 records pass (40.0%)
2025-05-14 14:21:22,667 - excel_formula_test - INFO - Expected: 3 records, Got: 2
2025-05-14 14:21:22,667 - excel_formula_test - INFO - Passing Examples:
2025-05-14 14:21:22,668 - excel_formula_test - ERROR - Error testing formula: "['__FIELD_1__', '__FIELD_0__'] not in index"
2025-05-14 14:21:22,668 - excel_formula_test - INFO - 
Testing formula: Submitter <> Approver AND Value > 100
2025-05-14 14:21:22,668 - qa_analytics - INFO - Parsed formula: Submitter <> Approver AND Value > 100 -> (df['Submitter']!=df['Approver']) & (df['Value']>100)
2025-05-14 14:21:22,668 - excel_formula_test - INFO - Parsed: (df['Submitter']!=df['Approver']) & (df['Value']>100)
2025-05-14 14:21:22,668 - excel_formula_test - INFO - Fields: ['Submitter', 'Approver', 'Value']
2025-05-14 14:21:22,668 - excel_formula_test - INFO - Results: 2 of 5 records pass (40.0%)
2025-05-14 14:21:22,668 - excel_formula_test - INFO - Expected: 2 records, Got: 2
2025-05-14 14:21:22,668 - excel_formula_test - INFO - Passing Examples:
2025-05-14 14:21:22,669 - excel_formula_test - INFO -   Submitter Approver  Value
1      Mary     John    200
3       Bob  Charlie    500
2025-05-14 14:21:22,669 - excel_formula_test - INFO - Failing Examples:
2025-05-14 14:21:22,670 - excel_formula_test - INFO -   Submitter Approver  Value
0      John    Alice    100
2      John     John     50
2025-05-14 14:21:22,670 - excel_formula_test - INFO - 
Testing formula: Risk Level = "High"
2025-05-14 14:21:22,670 - qa_analytics - INFO - Parsed formula: Risk Level = "High" -> (df['Risk Level']=="High")
2025-05-14 14:21:22,670 - excel_formula_test - INFO - Parsed: (df['Risk Level']=="High")
2025-05-14 14:21:22,670 - excel_formula_test - INFO - Fields: ['Risk Level']
2025-05-14 14:21:22,671 - excel_formula_test - INFO - Results: 1 of 5 records pass (20.0%)
2025-05-14 14:21:22,671 - excel_formula_test - INFO - Expected: 1 records, Got: 1
2025-05-14 14:21:22,671 - excel_formula_test - INFO - Passing Examples:
2025-05-14 14:21:22,672 - excel_formula_test - INFO -   Risk Level
0       High
2025-05-14 14:21:22,672 - excel_formula_test - INFO - Failing Examples:
2025-05-14 14:21:22,672 - excel_formula_test - INFO -   Risk Level
1     Medium
2        Low
2025-05-14 14:21:22,673 - excel_formula_test - INFO - 
Testing formula: Risk Level IN ("High", "Medium")
2025-05-14 14:21:22,673 - qa_analytics - INFO - Parsed formula: Risk Level IN ("High", "Medium") -> (df['Risk Level']df['Risk Level'].isin(["High", "Medium"]))
2025-05-14 14:21:22,673 - excel_formula_test - INFO - Parsed: (df['Risk Level']df['Risk Level'].isin(["High", "Medium"]))
2025-05-14 14:21:22,673 - excel_formula_test - INFO - Fields: ['Risk Level']
2025-05-14 14:21:22,673 - qa_analytics - ERROR - Custom formula failed: invalid syntax. Perhaps you forgot a comma? (<string>, line 1), Formula: Risk Level IN ("High", "Medium")
2025-05-14 14:21:22,673 - excel_formula_test - INFO - Results: 0 of 5 records pass (0.0%)
2025-05-14 14:21:22,673 - excel_formula_test - INFO - Expected: 2 records, Got: 0
2025-05-14 14:21:22,673 - excel_formula_test - INFO - Failing Examples:
2025-05-14 14:21:22,674 - excel_formula_test - INFO -   Risk Level
0       High
1     Medium
2025-05-14 14:21:22,674 - excel_formula_test - INFO - 
Testing formula: NOT ISBLANK(Value)
2025-05-14 14:21:22,674 - qa_analytics - INFO - Parsed formula: NOT ISBLANK(Value) -> (~pd.isna(df['Value']))
2025-05-14 14:21:22,674 - excel_formula_test - INFO - Parsed: (~pd.isna(df['Value']))
2025-05-14 14:21:22,674 - excel_formula_test - INFO - Fields: ['Value']
2025-05-14 14:21:22,675 - excel_formula_test - INFO - Results: 5 of 5 records pass (100.0%)
2025-05-14 14:21:22,675 - excel_formula_test - INFO - Expected: 5 records, Got: 5
2025-05-14 14:21:22,675 - excel_formula_test - INFO - Passing Examples:
2025-05-14 14:21:22,675 - excel_formula_test - INFO -    Value
0    100
1    200
2025-05-14 14:21:22,675 - excel_formula_test - INFO - 
=== CONFIGURATION EXAMPLE ===
2025-05-14 14:21:22,675 - qa_analytics - INFO - Parsed formula: Submitter <> Approver AND __FIELD_1__ <= __FIELD_0__ -> (df['Submitter']!=df['Approver']) & (df['Submit Date']<=df['TL Date'])
2025-05-14 14:21:22,675 - excel_formula_test - INFO - Sample YAML configuration with Excel formula:
2025-05-14 14:21:22,675 - excel_formula_test - INFO - 
analytic_id: 99
analytic_name: 'Custom Formula Demo'
analytic_description: 'Demonstrates Excel-style formula validation'

# Data source configuration
data_source:
  name: 'approval_workflow'
  required_fields:
    - 'Submitter'
    - 'Approver'
    - 'Submit Date'
    - 'TL Date'
    - 'Risk Level'
    - 'Value'

# Validations with custom formula
validations:
  - rule: custom_formula
    description: 'Submitter cannot approve their own work and approval sequence must be followed'
    parameters:
      original_formula: 'Submitter <> Approver AND `Submit Date` <= `TL Date`'
      
  # With the auto-parsing feature you added, just providing the original_formula is enough!
  # The formula will be parsed during validation.
  # For reference, the parser would generate:
  # formula: "(df['Submitter']!=df['Approver']) & (df['Submit Date']<=df['TL Date'])"
  
  - rule: segregation_of_duties
    description: 'Traditional segregation of duties validation for comparison'
    parameters:
      submitter_field: 'Submitter'
      approver_fields: ['Approver']

thresholds:
  error_percentage: 5.0
  rationale: 'Industry standard allows for up to 5% error rate.'

reporting:
  group_by: 'Approver'
  summary_fields: ['GC', 'PC', 'DNC', 'Total', 'DNC_Percentage']
  detail_required: True

2025-05-14 14:21:22,676 - excel_formula_test - INFO - 
Demo complete! The Excel Formula Enhancement is working correctly.
2025-05-14 14:21:22,676 - excel_formula_test - INFO - You can now use Excel-style formulas in your QA Analytics Framework.
2025-05-14 14:27:38,935 - qa_analytics - INFO - Parsed formula: IF(Risk_Level="High", Days_Open<=30, Days_Open<=90) -> (np.where(df['Risk_Level']=="High", df['Days_Open']<=30, df['Days_Open']<=90))
2025-05-14 14:27:38,936 - qa_analytics - INFO - Parsed formula: IF(Risk_Level="High", Days_Open<=30, Days_Open<=90) -> (np.where(df['Risk_Level']=="High", df['Days_Open']<=30, df['Days_Open']<=90))
2025-05-14 14:27:58,729 - excel_formula_test - INFO - EXCEL FORMULA ENHANCEMENT DEMO
2025-05-14 14:27:58,729 - excel_formula_test - INFO - ============================
2025-05-14 14:27:58,729 - excel_formula_test - INFO - === EXCEL FORMULA PARSER TESTS ===
2025-05-14 14:27:58,729 - qa_analytics - INFO - Parsed formula: Submitter = Approver -> (df['Submitter']==df['Approver'])
2025-05-14 14:27:58,731 - excel_formula_test - INFO -   Parsed: (df['Submitter']==df['Approver'])
2025-05-14 14:27:58,731 - excel_formula_test - INFO -   Fields: ['Submitter', 'Approver']
2025-05-14 14:27:58,731 - excel_formula_test - INFO - ---
2025-05-14 14:27:58,731 - qa_analytics - INFO - Parsed formula: Submitter <> Approver -> (df['Submitter']!=df['Approver'])
2025-05-14 14:27:58,732 - excel_formula_test - INFO -   Parsed: (df['Submitter']!=df['Approver'])
2025-05-14 14:27:58,732 - excel_formula_test - INFO -   Fields: ['Submitter', 'Approver']
2025-05-14 14:27:58,732 - excel_formula_test - INFO - ---
2025-05-14 14:27:58,732 - qa_analytics - INFO - Parsed formula: Value > 100 -> (df['Value']>100)
2025-05-14 14:27:58,733 - excel_formula_test - INFO -   Parsed: (df['Value']>100)
2025-05-14 14:27:58,733 - excel_formula_test - INFO -   Fields: ['Value']
2025-05-14 14:27:58,733 - excel_formula_test - INFO - ---
2025-05-14 14:27:58,734 - qa_analytics - INFO - Parsed formula: Value >= 100 -> (df['Value']>=100)
2025-05-14 14:27:58,734 - excel_formula_test - INFO -   Parsed: (df['Value']>=100)
2025-05-14 14:27:58,734 - excel_formula_test - INFO -   Fields: ['Value']
2025-05-14 14:27:58,735 - excel_formula_test - INFO - ---
2025-05-14 14:27:58,735 - qa_analytics - INFO - Parsed formula: Value < 200 -> (df['Value']<200)
2025-05-14 14:27:58,735 - excel_formula_test - INFO -   Parsed: (df['Value']<200)
2025-05-14 14:27:58,735 - excel_formula_test - INFO -   Fields: ['Value']
2025-05-14 14:27:58,735 - excel_formula_test - INFO - ---
2025-05-14 14:27:58,735 - qa_analytics - INFO - Parsed formula: Value <= 200 -> (df['Value']<=200)
2025-05-14 14:27:58,736 - excel_formula_test - INFO -   Parsed: (df['Value']<=200)
2025-05-14 14:27:58,736 - excel_formula_test - INFO -   Fields: ['Value']
2025-05-14 14:27:58,736 - excel_formula_test - INFO - ---
2025-05-14 14:27:58,736 - qa_analytics - INFO - Parsed formula: Submitter <> Approver AND Value > 100 -> (df['Submitter']!=df['Approver']) & (df['Value']>100)
2025-05-14 14:27:58,737 - excel_formula_test - INFO -   Parsed: (df['Submitter']!=df['Approver']) & (df['Value']>100)
2025-05-14 14:27:58,737 - excel_formula_test - INFO -   Fields: ['Submitter', 'Approver', 'Value']
2025-05-14 14:27:58,737 - excel_formula_test - INFO - ---
2025-05-14 14:27:58,737 - qa_analytics - INFO - Parsed formula: Submitter = Approver OR Value > 100 -> (df['Submitter']==df['Approver']) | (df['Value']>100)
2025-05-14 14:27:58,738 - excel_formula_test - INFO -   Parsed: (df['Submitter']==df['Approver']) | (df['Value']>100)
2025-05-14 14:27:58,738 - excel_formula_test - INFO -   Fields: ['Submitter', 'Approver', 'Value']
2025-05-14 14:27:58,738 - excel_formula_test - INFO - ---
2025-05-14 14:27:58,738 - qa_analytics - INFO - Parsed formula: NOT Complete -> (~df['Complete'])
2025-05-14 14:27:58,739 - excel_formula_test - INFO -   Parsed: (~df['Complete'])
2025-05-14 14:27:58,739 - excel_formula_test - INFO -   Fields: ['Complete']
2025-05-14 14:27:58,739 - excel_formula_test - INFO - ---
2025-05-14 14:27:58,739 - qa_analytics - INFO - Parsed formula: (Submitter <> Approver) AND (Value > 100) -> (df['Submitter']!=df['Approver']) & (df['Value']>100)
2025-05-14 14:27:58,740 - excel_formula_test - INFO -   Parsed: (df['Submitter']!=df['Approver']) & (df['Value']>100)
2025-05-14 14:27:58,740 - excel_formula_test - INFO -   Fields: ['Submitter', 'Approver', 'Value']
2025-05-14 14:27:58,740 - excel_formula_test - INFO - ---
2025-05-14 14:27:58,740 - qa_analytics - INFO - Parsed formula: __FIELD_1__ <= __FIELD_0__ -> (df['Submit Date']<=df['TL Date'])
2025-05-14 14:27:58,741 - excel_formula_test - INFO -   Parsed: (df['Submit Date']<=df['TL Date'])
2025-05-14 14:27:58,741 - excel_formula_test - INFO -   Fields: ['TL Date', 'Submit Date']
2025-05-14 14:27:58,741 - excel_formula_test - INFO - ---
2025-05-14 14:27:58,741 - qa_analytics - INFO - Parsed formula: Submitter <> Approver AND __FIELD_1__ <= __FIELD_0__ AND Value > 100 -> (df['Submitter']!=df['Approver']) & (df['Submit Date']<=df['TL Date']) & (df['Value']>100)
2025-05-14 14:27:58,742 - excel_formula_test - INFO -   Parsed: (df['Submitter']!=df['Approver']) & (df['Submit Date']<=df['TL Date']) & (df['Value']>100)
2025-05-14 14:27:58,742 - excel_formula_test - INFO -   Fields: ['TL Date', 'Submit Date', 'Submitter', 'Approver', 'Value']
2025-05-14 14:27:58,742 - excel_formula_test - INFO - ---
2025-05-14 14:27:58,742 - qa_analytics - INFO - Parsed formula: ISBLANK(Approver) -> (pd.isna(df['Approver']))
2025-05-14 14:27:58,743 - excel_formula_test - INFO -   Parsed: (pd.isna(df['Approver']))
2025-05-14 14:27:58,743 - excel_formula_test - INFO -   Fields: ['Approver']
2025-05-14 14:27:58,743 - excel_formula_test - INFO - ---
2025-05-14 14:27:58,743 - qa_analytics - INFO - Parsed formula: NOT ISBLANK(Approver) -> (~pd.isna(df['Approver']))
2025-05-14 14:27:58,744 - excel_formula_test - INFO -   Parsed: (~pd.isna(df['Approver']))
2025-05-14 14:27:58,744 - excel_formula_test - INFO -   Fields: ['Approver']
2025-05-14 14:27:58,744 - excel_formula_test - INFO - ---
2025-05-14 14:27:58,744 - qa_analytics - INFO - Parsed formula: Risk Level IN ("High", "Medium") -> (df['Risk Level']df['Risk Level'].isin(["High", "Medium"]))
2025-05-14 14:27:58,745 - excel_formula_test - INFO -   Parsed: (df['Risk Level']df['Risk Level'].isin(["High", "Medium"]))
2025-05-14 14:27:58,745 - excel_formula_test - INFO -   Fields: ['Risk Level']
2025-05-14 14:27:58,745 - excel_formula_test - INFO - ---
2025-05-14 14:27:58,745 - excel_formula_test - INFO - 
=== FORMULA VALIDATION TESTS ===
2025-05-14 14:27:58,747 - excel_formula_test - INFO - Test data created with 5 records
2025-05-14 14:27:58,747 - excel_formula_test - INFO - 
Testing formula: Submitter <> Approver
2025-05-14 14:27:58,748 - qa_analytics - INFO - Parsed formula: Submitter <> Approver -> (df['Submitter']!=df['Approver'])
2025-05-14 14:27:58,748 - excel_formula_test - INFO - Parsed: (df['Submitter']!=df['Approver'])
2025-05-14 14:27:58,748 - excel_formula_test - INFO - Fields: ['Submitter', 'Approver']
2025-05-14 14:27:58,748 - excel_formula_test - INFO - Results: 4 of 5 records pass (80.0%)
2025-05-14 14:27:58,748 - excel_formula_test - INFO - Expected: 3 records, Got: 4
2025-05-14 14:27:58,748 - excel_formula_test - INFO - Passing Examples:
2025-05-14 14:27:58,750 - excel_formula_test - INFO -   Submitter Approver
0      John    Alice
1      Mary     John
2025-05-14 14:27:58,751 - excel_formula_test - INFO - Failing Examples:
2025-05-14 14:27:58,751 - excel_formula_test - INFO -   Submitter Approver
2      John     John
2025-05-14 14:27:58,752 - excel_formula_test - INFO - 
Testing formula: Value > 100
2025-05-14 14:27:58,752 - qa_analytics - INFO - Parsed formula: Value > 100 -> (df['Value']>100)
2025-05-14 14:27:58,752 - excel_formula_test - INFO - Parsed: (df['Value']>100)
2025-05-14 14:27:58,752 - excel_formula_test - INFO - Fields: ['Value']
2025-05-14 14:27:58,752 - excel_formula_test - INFO - Results: 2 of 5 records pass (40.0%)
2025-05-14 14:27:58,752 - excel_formula_test - INFO - Expected: 3 records, Got: 2
2025-05-14 14:27:58,752 - excel_formula_test - INFO - Passing Examples:
2025-05-14 14:27:58,753 - excel_formula_test - INFO -    Value
1    200
3    500
2025-05-14 14:27:58,753 - excel_formula_test - INFO - Failing Examples:
2025-05-14 14:27:58,754 - excel_formula_test - INFO -    Value
0    100
2     50
2025-05-14 14:27:58,754 - excel_formula_test - INFO - 
Testing formula: `Submit Date` <= `TL Date`
2025-05-14 14:27:58,754 - qa_analytics - INFO - Parsed formula: __FIELD_1__ <= __FIELD_0__ -> (df['Submit Date']<=df['TL Date'])
2025-05-14 14:27:58,754 - excel_formula_test - INFO - Parsed: (df['Submit Date']<=df['TL Date'])
2025-05-14 14:27:58,754 - excel_formula_test - INFO - Fields: ['TL Date', 'Submit Date']
2025-05-14 14:27:58,755 - excel_formula_test - INFO - Results: 2 of 5 records pass (40.0%)
2025-05-14 14:27:58,755 - excel_formula_test - INFO - Expected: 3 records, Got: 2
2025-05-14 14:27:58,755 - excel_formula_test - INFO - Passing Examples:
2025-05-14 14:27:58,757 - excel_formula_test - INFO -      TL Date Submit Date
0 2025-01-05  2025-01-01
3 2025-05-01  2025-04-01
2025-05-14 14:27:58,757 - excel_formula_test - INFO - Failing Examples:
2025-05-14 14:27:58,758 - excel_formula_test - INFO -      TL Date Submit Date
1 2025-01-15  2025-02-01
2 2025-02-01  2025-03-01
2025-05-14 14:27:58,758 - excel_formula_test - INFO - 
Testing formula: Submitter <> Approver AND Value > 100
2025-05-14 14:27:58,758 - qa_analytics - INFO - Parsed formula: Submitter <> Approver AND Value > 100 -> (df['Submitter']!=df['Approver']) & (df['Value']>100)
2025-05-14 14:27:58,758 - excel_formula_test - INFO - Parsed: (df['Submitter']!=df['Approver']) & (df['Value']>100)
2025-05-14 14:27:58,758 - excel_formula_test - INFO - Fields: ['Submitter', 'Approver', 'Value']
2025-05-14 14:27:58,758 - excel_formula_test - INFO - Results: 2 of 5 records pass (40.0%)
2025-05-14 14:27:58,758 - excel_formula_test - INFO - Expected: 2 records, Got: 2
2025-05-14 14:27:58,758 - excel_formula_test - INFO - Passing Examples:
2025-05-14 14:27:58,759 - excel_formula_test - INFO -   Submitter Approver  Value
1      Mary     John    200
3       Bob  Charlie    500
2025-05-14 14:27:58,759 - excel_formula_test - INFO - Failing Examples:
2025-05-14 14:27:58,760 - excel_formula_test - INFO -   Submitter Approver  Value
0      John    Alice    100
2      John     John     50
2025-05-14 14:27:58,760 - excel_formula_test - INFO - 
Testing formula: Risk Level = "High"
2025-05-14 14:27:58,760 - qa_analytics - INFO - Parsed formula: Risk Level = "High" -> (df['Risk Level']=="High")
2025-05-14 14:27:58,760 - excel_formula_test - INFO - Parsed: (df['Risk Level']=="High")
2025-05-14 14:27:58,761 - excel_formula_test - INFO - Fields: ['Risk Level']
2025-05-14 14:27:58,761 - excel_formula_test - INFO - Results: 1 of 5 records pass (20.0%)
2025-05-14 14:27:58,761 - excel_formula_test - INFO - Expected: 1 records, Got: 1
2025-05-14 14:27:58,761 - excel_formula_test - INFO - Passing Examples:
2025-05-14 14:27:58,762 - excel_formula_test - INFO -   Risk Level
0       High
2025-05-14 14:27:58,762 - excel_formula_test - INFO - Failing Examples:
2025-05-14 14:27:58,762 - excel_formula_test - INFO -   Risk Level
1     Medium
2        Low
2025-05-14 14:27:58,763 - excel_formula_test - INFO - 
Testing formula: Risk Level IN ("High", "Medium")
2025-05-14 14:27:58,763 - qa_analytics - INFO - Parsed formula: Risk Level IN ("High", "Medium") -> (df['Risk Level']df['Risk Level'].isin(["High", "Medium"]))
2025-05-14 14:27:58,763 - excel_formula_test - INFO - Parsed: (df['Risk Level']df['Risk Level'].isin(["High", "Medium"]))
2025-05-14 14:27:58,763 - excel_formula_test - INFO - Fields: ['Risk Level']
2025-05-14 14:27:58,764 - qa_analytics - ERROR - Custom formula failed: invalid syntax. Perhaps you forgot a comma? (<string>, line 1), Formula: Risk Level IN ("High", "Medium")
2025-05-14 14:27:58,764 - excel_formula_test - INFO - Results: 0 of 5 records pass (0.0%)
2025-05-14 14:27:58,764 - excel_formula_test - INFO - Expected: 2 records, Got: 0
2025-05-14 14:27:58,764 - excel_formula_test - INFO - Failing Examples:
2025-05-14 14:27:58,764 - excel_formula_test - INFO -   Risk Level
0       High
1     Medium
2025-05-14 14:27:58,765 - excel_formula_test - INFO - 
Testing formula: NOT ISBLANK(Value)
2025-05-14 14:27:58,765 - qa_analytics - INFO - Parsed formula: NOT ISBLANK(Value) -> (~pd.isna(df['Value']))
2025-05-14 14:27:58,765 - excel_formula_test - INFO - Parsed: (~pd.isna(df['Value']))
2025-05-14 14:27:58,765 - excel_formula_test - INFO - Fields: ['Value']
2025-05-14 14:27:58,765 - excel_formula_test - INFO - Results: 5 of 5 records pass (100.0%)
2025-05-14 14:27:58,765 - excel_formula_test - INFO - Expected: 5 records, Got: 5
2025-05-14 14:27:58,765 - excel_formula_test - INFO - Passing Examples:
2025-05-14 14:27:58,766 - excel_formula_test - INFO -    Value
0    100
1    200
2025-05-14 14:27:58,766 - excel_formula_test - INFO - 
=== CONFIGURATION EXAMPLE ===
2025-05-14 14:27:58,766 - qa_analytics - INFO - Parsed formula: Submitter <> Approver AND __FIELD_1__ <= __FIELD_0__ -> (df['Submitter']!=df['Approver']) & (df['Submit Date']<=df['TL Date'])
2025-05-14 14:27:58,766 - excel_formula_test - INFO - Sample YAML configuration with Excel formula:
2025-05-14 14:27:58,766 - excel_formula_test - INFO - 
analytic_id: 99
analytic_name: 'Custom Formula Demo'
analytic_description: 'Demonstrates Excel-style formula validation'

# Data source configuration
data_source:
  name: 'approval_workflow'
  required_fields:
    - 'Submitter'
    - 'Approver'
    - 'Submit Date'
    - 'TL Date'
    - 'Risk Level'
    - 'Value'

# Validations with custom formula
validations:
  - rule: custom_formula
    description: 'Submitter cannot approve their own work and approval sequence must be followed'
    parameters:
      original_formula: 'Submitter <> Approver AND `Submit Date` <= `TL Date`'
      
  # With the auto-parsing feature you added, just providing the original_formula is enough!
  # The formula will be parsed during validation.
  # For reference, the parser would generate:
  # formula: "(df['Submitter']!=df['Approver']) & (df['Submit Date']<=df['TL Date'])"
  
  - rule: segregation_of_duties
    description: 'Traditional segregation of duties validation for comparison'
    parameters:
      submitter_field: 'Submitter'
      approver_fields: ['Approver']

thresholds:
  error_percentage: 5.0
  rationale: 'Industry standard allows for up to 5% error rate.'

reporting:
  group_by: 'Approver'
  summary_fields: ['GC', 'PC', 'DNC', 'Total', 'DNC_Percentage']
  detail_required: True

2025-05-14 14:27:58,766 - excel_formula_test - INFO - 
Demo complete! The Excel Formula Enhancement is working correctly.
2025-05-14 14:27:58,766 - excel_formula_test - INFO - You can now use Excel-style formulas in your QA Analytics Framework.
